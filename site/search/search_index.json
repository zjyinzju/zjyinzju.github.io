{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\uff01","text":"<p>\u8fd9\u662f\u6211\u7684\u7b14\u8bb0\u672c\uff01</p> <p>\u4f1a\u8bb0\u5f55\u4e00\u4e9b\u5b66\u4e60\u548c\u751f\u6d3b\u7684\u5185\u5bb9,\u8fd8\u6709\u4e00\u4e9b\u89e6\u52a8\u6211\u7684\u8a00\u8bba\u548c\u4e66\u6458</p> <p>So it begins.</p>"},{"location":"%E6%A0%B7%E5%BC%8F%E8%AE%B0%E5%BD%95/","title":"\u6837\u5f0f\u8bb0\u5f55","text":"<p>\u5c1a\u672a\u5b8c\u5de5</p> <p>\u611f\u8c22 \u4fee\u4f6c\uff0c\u57fa\u672c\u662f\u7167\u6284\u4ed6\u7684\u55b5</p> <p>=\uffe3\u03c9\uffe3=</p> <p>Note</p> <p>\u767d\u663c\u4e4b\u5149\uff0c\u5c82\u77e5\u591c\u8272\u4e4b\u6df1</p> <p>Quote</p> <p>\u8c01\u4f1a\u6e34\u671b\u5b64\u72ec\uff0c\u53ea\u662f\u4e0d\u60f3\u4e71\u4ea4\u670b\u53cb\u7f62\u4e86</p> <p>Abstract</p> <p>\u6211\u6709\u53ef\u4ee5\u628a\u73a9\u5355\u8c03\u7684\u65f6\u95f4\uff0c\u5374\u6ca1\u6709\u5fcd\u53d7\u538c\u5026\u7684\u4f59\u5730</p> <p>Warning</p> <p>\u7761\u524d\u541e\u4e0b\u534a\u74f6\u5a01\u58eb\u5fcc</p> <p>Bug</p> <p>\u5f97\u5f97</p> <p>Success</p> <p>\u6b7b\u5e76\u975e\u751f\u7684\u5bf9\u7acb\u9762\uff0c\u800c\u4f5c\u4e3a\u751f\u7684\u4e00\u90e8\u5206\u6c38\u5b58</p> <p>Info</p> <p>\u5f53\u4f60\u9192\u6765\u65f6\uff0c\u4f60\u5c06\u6210\u4e3a\u65b0\u4e16\u754c\u7684\u4e00\u90e8\u5206</p> <p>Question</p> <p>\u4f60\u613f\u610f\u628a\u5b69\u5b50\u751f\u5728\u8fd9\u4e2a\u5145\u6ee1\u66b4\u529b\u548c\u77db\u76fe\u7684\u4e16\u754c\u4e0a\u4e48</p> <p>Failure</p> <p>\u8ff7\u5931\u7684\u4eba\u8ff7\u5931\u4e86</p> <p>Danger</p> <p>\u6211\u660e\u77e5\u81ea\u5df1\u5728\u5e72\u4ec0\u4e48\uff0c\u53ef\u504f\u504f\u505c\u4e0d\u4e0b\u6765</p> <p>Example</p> <p>\u518d\u4e5f\u4e0d\u7528\u524d\u601d\u540e\u60f3\uff0c\u4e00\u5207\u5c82\u975e\u5df2\u7136\u8fc7\u5f80</p> <p>Definition</p> <p>\u90a3\u5b8c\u5168\u662f\u4e00\u79cd\u7eaa\u5ff5\u7891\u5f0f\u7684\u7231</p> <p>Proof</p> <p>\u552f\u6b7b\u8005\u6c38\u8fdc\u5341\u4e03</p> <p>Property</p> <p>\u55f3\uff0c\u4e0d\u559d\u70b9\u5564\u9152\u4ec0\u4e48\u7684\uff1f</p> <p>Extra</p> <p>\u4e2d\u7530\u6211\u8111\u5b50\u4e0d\u597d\u4f7f</p> <p>Section</p> <p>\u4e00\u5207\u5b89\u7136\u9759\u8c27</p> <p>Key-point</p> <p>\u76f4\u5b50\u8ddf\u6211\u8bb2\u8ff0\u4e95\u7684\u6545\u4e8b</p> <p>Advice</p> <p>\u65e0\u8bba\u5982\u4f55\u60f3\u770b\u770b\u4f60\u7684\u8033\u6735</p> <p>Not-advice</p> <p>1\uff015\uff01 LTC</p> <p>Eg</p> <p>\u4ece\u7406\u5858\u5230\u4e86\u4e0a\u6d77\uff0c\u54e5\u4eec\u513f\u6536\u83b7\u597d\u591amoney</p>"},{"location":"%E6%A0%B7%E5%BC%8F%E8%AE%B0%E5%BD%95/#_1","title":"\u5341\u70b9\u534a\u7684\u98de\u673a\u5feb\u8981\u5230\u4e86","text":""},{"location":"%E6%A0%B7%E5%BC%8F%E8%AE%B0%E5%BD%95/#_2","title":"\u6211\u7684\u53e3\u888b\u53ea\u6709\u9ed1\u8272\u7684\u67f3\u4e01","text":""},{"location":"%E6%A0%B7%E5%BC%8F%E8%AE%B0%E5%BD%95/#_3","title":"\u5c31\u50cf\u4e00\u53ea\u8774\u8776\u98de\u8fc7\u5e9f\u589f","text":""},{"location":"%E6%A0%B7%E5%BC%8F%E8%AE%B0%E5%BD%95/#_4","title":"\u4f60\u662f\u4e00\u751f\u4e00\u4e16\u4e0d\u4f1a\u4e86\u89e3","text":""},{"location":"%E6%A0%B7%E5%BC%8F%E8%AE%B0%E5%BD%95/#_5","title":"\u54d7\u5566\u5566\u5566\u5566\u5929\u5728\u4e0b\u96e8","text":""},{"location":"%E8%AE%B0%E5%BF%B5/","title":"\u4e00\u4e9b\u6458\u5f55\u548c\u788e\u788e\u5ff5~","text":"<p>\u81ea\u521d\u4e2d\u8d77\u6211\u5c31\u6709\u8bb0\u5f55\u7684\u7656\u597d,\u4e0d\u8fc7\u73b0\u5728\u7528\u7eb8\u7b14\u6ca1\u6709\u4e2d\u5b66\u90a3\u4e48\u9891\u7e41\u4e86,\u9042\u4e8e\u6b64\u7559\u4e0b\u4e00\u4e9b\u8bb0\u5f55\u548c\u5ff5\u60f3</p>"},{"location":"%E8%AE%B0%E5%BF%B5/#2023","title":"2023","text":""},{"location":"%E8%AE%B0%E5%BF%B5/#20231113","title":"2023.11.13","text":"Abstract <p>\u4f3c\u4e4e\u603b\u662f\u505c\u7559\u5728\u4e00\u4e2a\u5730\u65b9\u7b49\u5f85\u3002\u7b49\u5f85\u5185\u5fc3\u7684\u6109\u60a6\u6674\u6717\u548c\u5fae\u5c0f\u5e78\u798f\uff0c\u50cf\u6625\u65e5\u6a31\u82b1\u6d01\u767d\u82ac\u82b3\uff0c\u81ea\u7136\u70c2\u6f2b\uff0c\u81ea\u751f\u81ea\u706d\uff0c\u65e0\u8fb9\u65e0\u9645\u3002\u7b49\u5f85\u751f\u6d3b\u7684\u67d0\u4e9b\u65f6\u523b\uff0c\u80fd\u521a\u597d\u7ad9\u5728\u4e00\u68f5\u5f00\u82b1\u7684\u6811\u679d\u4e0b\uff0c\u62ac\u8d77\u5934\u4e3a\u5b83\u800c\u52a8\u5bb9\u3002\u90a3\u4e2a\u80fd\u591f\u8ba9\u4eba\u539f\u5730\u7b49\u5f85\u7684\u6240\u5728\uff0c\u9690\u79d8\uff0c\u4e0d\u4e3a\u4eba\u77e5\uff0c\u5728\u67d0\u4e2a\u9ed1\u6697\u6d1e\u7a74\u7684\u8f6c\u6298\u53e3</p> lyrics <p>\u5f53\u9ed1\u591c \u6e05\u6670\u8fc7\u767d\u663c</p> <p>\u5f53\u5feb\u4e50 \u8d54\u4e0a\u4e86\u6240\u6709</p> <p>\u5f53\u7406\u667a \u71ac\u4e0d\u8fc7\u653e\u7eb5</p> <p>\u4f60\u7684\u795e\u8272 \u4ec0\u4e48\u90fd\u6de1\u4e86</p> <p>\u6211\u8fd8\u5b88\u7740\u7231 \u98d8\u7740</p>"},{"location":"%E8%AE%B0%E5%BF%B5/#20231115","title":"2023.11.15","text":"poem <p>\u6ee1\u5802\u82b1\u9189\u4e09\u5343\u5ba2\uff0c\u4e00\u5251\u971c\u5bd2\u5341\u56db\u5dde</p>"},{"location":"%E8%AE%B0%E5%BF%B5/#20231120","title":"2023.11.20","text":"random thought <p>\u5728\u4e0a\u6d77\u4e2d\u5fc3\u7684118\u5c42\u8fdc\u773a\u5929\u9645\u5c42\u4e91\u3001\u7ea2\u65e5\u897f\u5760\u3001\u971e\u5149\u6ee1\u5929\uff0c\u611f\u89c9\u597d\u6d6a\u6f2b\uff0c\u5e0c\u671b\u8eab\u8fb9\u7684\u4eba\u662fsoulmate\uff0c\u4f46\u662f\u4ee5\u6211\u76ee\u524d\u6d45\u8584\u7684\u7075\u9b42\u6765\u770b\u662f\u884c\u4e0d\u901a\u7684\uff0c\u6709\u77e5\u5fc3\u670b\u53cb\u966a\u4f34\u6211\u5c31\u5df2\u7ecf\u77e5\u8db3\u4e86~</p> <p>\u591c\u8272\u6765\u4e34\uff0c\u5916\u6ee9\u706f\u706b\u8ba9\u4eba\u8ff7\u9189\u53c8\u89c9\u5f97\u758f\u79bb\uff0c\u81ea\u5df1\u5e76\u4e0d\u5c5e\u4e8e\u8fd9\u91cc\uff0c\u6211\u7684\u5bb6\u4eba\u5728\u897f\u5b89\uff0c\u6211\u6700\u597d\u7684\u670b\u53cb\u5728\u4e0a\u6d77\u897f\u5b89\u5317\u4eac\uff0c\u800c\u6211\u5728\u676d\u5dde\u8e3d\u8e3d\u72ec\u884c</p> <p>\u4f46\u662f\u5927\u5b66\u5927\u5bb6\u90fd\u662f\u4e00\u4e2a\u4eba\u8d70\uff0c\u83ab\u5982\u8bf4\u6210\u5e74\u5c31\u662f\u8981\u5b66\u4f1a\u4e00\u4e2a\u4eba\u548c\u5b64\u72ec\u76f8\u5904\uff0ckeyhole\u6709\u4ed6\u7684Ms.F\uff0c\u800c\u6211\u53ea\u9700\u8981\u6709\u65f6\u5019\u80fd\u6709\u4e2a\u4eba\u542c\u6211\u503e\u8bc9</p> <p>\u538b\u529b\u5f88\u5927\uff0c\u6240\u5e78\u6211\u5fc3\u6001\u5f88\u597d\uff0c\u867d\u7136\u6211\u7ecf\u5e38\u5145\u6ee1\u60b2\u89c2\u8ff7\u60d8\uff0c\u4f46\u662f\u6211\u8fd8\u591a\u5c11\u662f\u76f8\u4fe1\u81ea\u5df1\u7684</p> <p>\u672a\u6765\u5728\u54ea\u91cc\u5e73\u51e1/\u8c01\u7ed9\u6211\u7b54\u6848</p> Abstract <p>\u521d\u590f\u5f02\u5e38\u4eae\u4e3d\u7684\u9633\u5149\uff0c\u5c06\u5934\u9876\u6811\u679d\u7684\u9634\u5f71\u6591\u6591\u9a73\u9a73\u5730\u5370\u5728\u5730\u4e0a\u3002\u65e0\u98ce\uff0c\u6811\u5f71\u770b\u4e0a\u53bb\u7adf\u5982\u751f\u6765\u4fbf\u56fa\u5b9a\u4e8e\u5730\u8868\u7684\u6591\u75d5\u3002\u56db\u5468\u9612\u65e0\u58f0\u606f\uff0c\u4eff\u4f5b\u8349\u53f6\u5728\u9633\u5149\u4e0b\u547c\u5438\u7684\u58f0\u97f3\u90fd\u53ef\u542c\u5230\u3002</p> <p>\u5929\u7a7a\u98d8\u6d6e\u7740\u51e0\u7247\u4e0d\u5927\u7684\u4e91\u7d6e\uff0c\u9c9c\u660e\u800c\u7b80\u6d01\uff0c\u5b9b\u5982\u4e2d\u4e16\u7eaa\u94dc\u677f\u753b\u4e0a\u7684\u80cc\u666f\u3002\u76ee\u529b\u6240\u53ca\uff0c\u6240\u6709\u7269\u8c61\u65e0\u4e0d\u5386\u5386\u7136\u8f6e\u5ed3\u5206\u660e\uff0c\u7adf\u4f7f\u6211\u611f\u89c9\u81ea\u5bb6\u8089\u4f53\u4f3c\u4e4e\u6210\u4e86\u865a\u65e0\u7f25\u7f08\u7684\u4ec0\u4e48\u7269\u4ef6\uff0c\u4e14\u70ed\u5f97\u51fa\u5947\u3002</p>"},{"location":"%E8%AE%B0%E5%BF%B5/#20231122","title":"2023.11.22","text":"lyrics <p>\u9752\u6625\u662f\u4e00\u675f\u5728\u5929\u7a7a\u4e2d</p> <p>\u7eda\u70c2\u7684\u70df\u82b1</p> <p>\u7eb5\u7136\u591a\u4e48\u5b8c\u7f8e\u65e0\u7455</p> <p>\u7ec8\u7a76\u4f1a\u843d\u4e0b</p> <p>\u6216\u8bb8\u5427</p> <p>\u8d8a\u957f\u5927\u8d8a\u5bb3\u6015</p> <p>\u5982\u8fdc\u53bb\u7684\u6d6a\u82b1</p> <p>\u8fd9\u6d6a\u82b1</p> <p>\u4f1a\u51b2\u6563\u6211\u4eec\u5417</p> <p>\u7136\u540e\u5404\u81ea\u5929\u6daf</p>"},{"location":"%E8%AE%B0%E5%BF%B5/#20231125","title":"2023.11.25","text":"poem <p>\u4fdd\u6301\u987b\u81fe\u7684\u6d6a\u6f2b\uff0c\u7406\u60f3\u7684\u55a7\u56a3\uff0c\u6b22\u6109\u7684\u70ed\u7231\uff0c\u6c38\u8fdc\u81ea\u7531\u3002</p> <p>\u4e0d\u8981\u5728\u90a3\u91cc\u8e31\u6b65</p> <p>\u5929\u9ed1\u4e86</p> <p>\u4e00\u5c0f\u7fa4\u661f\u661f\u6084\u6084\u6563\u5f00</p> <p>\u5305\u56f4\u4e86\u5de8\u5927\u7684\u67af\u6811</p> <p>\u4e0d\u8981\u5728\u90a3\u91cc\u8e31\u6b65</p> <p>\u68a6\u592a\u6df1\u4e86</p> <p>\u4f60\u6ca1\u6709\u7fbd\u6bdb</p> <p>\u751f\u547d\u91cf\u4e0d\u51fa\u6b7b\u4ea1\u7684\u6df1\u5ea6</p> <p>\u4e0d\u8981\u5728\u90a3\u91cc\u8e31\u6b65</p> <p>\u4e0b\u5c71\u5427</p> <p>\u4eba\u751f\u9700\u8981\u91cd\u590d</p> <p>\u91cd\u590d\u662f\u8def</p> <p>\u4e0d\u8981\u5728\u90a3\u91cc\u8e31\u6b65</p> <p>\u544a\u522b\u7edd\u671b</p> <p>\u544a\u522b\u98ce\u4e2d\u7684\u5c71\u8c37</p> <p>\u54ed\uff0c\u662f\u4e00\u79cd\u5e78\u798f</p> <p>\u4e0d\u8981\u5728\u90a3\u91cc\u8e31\u6b65</p> <p>\u706f\u5149</p> <p>\u548c\u9ea6\u7530\u8fb9\u65b0\u9c9c\u7684\u82b1\u6735</p> <p>\u6b63\u6447\u8361\u7740\u9ece\u660e\u7684\u5e37\u5e55</p>"},{"location":"%E8%AE%B0%E5%BF%B5/#20231127-1","title":"2023.11.27   (1)","text":"<ol> <li> <p>\u4eca\u5929\u662f\u611f\u53f9\u4eba\u751f\u547d\u4e4b\u8106\u5f31\u547d\u8fd0\u4e4b\u65e0\u5e38\u7684\u4e00\u5929</p> <p>\u8d77\u56e0\u662f\u8fd9\u4e2a\u66fc\u8054\u5427\u795e\u8d34 \u4e03\u5e74\u4e86\uff0c\u6211\u8fd8\u662f\u5f88\u60f3\u4f60</p> <p>\u6240\u4ee5\uff0c\u6d3b\u4e0b\u53bb\u30fe(\u2267\u25bd\u2266*)o</p> </li> </ol> line <p>\u5b69\u5b50\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u6211\u60f3\u544a\u8bc9\u4f60\uff0c\u4e16\u95f4\u7684\u4e00\u5207\u5965\u79d8</p> <p>\u544a\u8bc9\u4f60\u5c71\u5ddd\u5927\u6cb3\u3001\u65e5\u5347\u6708\u843d\u3001\u5149\u8363\u4e0e\u68a6\u60f3\u3001\u632b\u6298\u4e0e\u60b2\u4f24</p> <p>\u544a\u8bc9\u4f60\uff0c\u71c3\u6599\u662f\uff0c\u70b9\u71c3\u81ea\u5df1\uff0c\u7167\u4eae\u522b\u4eba\u7684\u4e1c\u897f</p> <p>\u706b\u7bad\u662f\uff0c\u4e3a\u4e86\u68a6\u60f3\uff0c\u629b\u5f03\u81ea\u5df1\u7684\u4e1c\u897f</p> <p>\u751f\u547d\u662f\uff0c\u7528\u6765\u71c3\u70e7\u7684\u4e1c\u897f</p> <p>\u6b7b\u4ea1\u662f\uff0c\u89c1\u8bc1\u751f\u547d\u7684\u4e1c\u897f</p> <p>\u5b87\u5b99\u662f\uff0c\u8ba9\u6b7b\u4ea1\u53d8\u5f97\u6e3a\u5c0f\u7684\u4e1c\u897f</p> <p>\u6e3a\u5c0f\u7684\u5c18\u57c3\uff0c\u662f\u5b87\u5b99\u7684\u5f00\u59cb</p> <p>\u5e73\u51e1\u7684\u6e3a\u5c0f\uff0c\u662f\u4f1f\u5927\u7684\u5f00\u59cb</p> <p>\u8ba9\u5e73\u51e1\u7684\u6211\u4eec\u53bb\u521b\u9020\u65b0\u4e16\u754c\u7684\u5f00\u59cb</p>"},{"location":"%E8%AE%B0%E5%BF%B5/#2024226","title":"2024.2.26","text":"Quote <p>Past is a foreign country</p>"},{"location":"notes/cs/ds/","title":"\u6570\u636e\u7ed3\u6784\u57fa\u7840","text":"<p>\u6d59\u5927\u8bfe\u7a0b\u7b14\u8bb0\u548c\u81ea\u5b66\u7b14\u8bb0</p> <p>\u4f9d\u636e\uff1acyll\u7684PPT &amp; \u667a\u4e91</p> <p>\u53c2\u8003\uff08\u5176\u5b9e\u611f\u89c9\u5c31\u662f\u7167\u6284\uff0c\u6bd5\u7adf\u6559\u5b66\u7684ppt\u90fd\u662f\u7edf\u4e00\u7684\uff09\uff1axg &amp; Q \u7684\u7b14\u8bb0</p> <p>\u5c1a\u672a\u5b8c\u5de5</p> <p>\u9884\u8ba1\u6691\u5047\u6216\u8005\u5b66\u671f\u672b\u4f1a\u96c6\u4e2d\u5f52\u6863\u6574\u7406\uff0c\u76ee\u524d\u6682\u4e14\u6309\u7167\u7ae0\u8282\u4e3a\u8282\u70b9\u5212\u5206</p> \u8bfe\u7a0b\u5185\u5bb9\u5927\u7eb2 <ol> <li>\u7b2c\u4e00\u8282\u8bfe\u4ecb\u7ecd\u5206\u6570\u6784\u6210\u3001\u4f5c\u4e1a\u5f62\u5f0f\u7b49\u91cd\u8981\u5185\u5bb9\uff01</li> <li>\u590d\u6742\u5ea6\u5206\u6790<ul> <li>\u5927 O\u3001\u5927 \u03a9\u3001\u5927 \u03b8\u3001\u5c0f o</li> </ul> </li> <li>\u6808\u548c\u961f\u5217<ul> <li>\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u540e\u7f00\u8868\u8fbe\u5f0f</li> <li>\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u524d\u7f00\u8868\u8fbe\u5f0f</li> <li>\u8868\u8fbe\u5f0f\u6811</li> </ul> </li> <li>\u6811<ul> <li>\u524d\u3001\u4e2d\u3001\u540e\u5e8f\u904d\u5386</li> <li>threaded binary tree \u7ebf\u7d22\u4e8c\u53c9\u6811</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u3001\u6ee1\u4e8c\u53c9\u6811</li> </ul> </li> <li>\u4e8c\u53c9\u641c\u7d22\u6811<ul> <li>\u67e5\u627e\u3001\u63d2\u5165</li> <li>\u5220\u9664\u6839\u8282\u70b9</li> <li>\u652f\u6301\u5220\u9664\u6307\u5b9a\u8282\u70b9(\u5e26 lazy tag \u540e\u7684\u67e5\u627e\u548c\u5220\u9664)</li> </ul> </li> <li>\u5806<ul> <li>\u7ebf\u6027\u5efa\u5806\u53ca\u5176\u590d\u6742\u5ea6\u8bc1\u660e</li> <li>push &amp; pop</li> <li>d-heap\uff08\u6ee1\u8db3\u5806\u6027\u8d28\u7684 d \u53c9\u6811\uff09: <ul> <li>push &amp; pop \u590d\u6742\u5ea6</li> <li>\u7236\u4eb2\u7f16\u53f7\u3001\u6700\u5927\u7684\u513f\u5b50\u7f16\u53f7\u3001\u6700\u5c0f\u7684\u513f\u5b50\u7f16\u53f7</li> </ul> </li> </ul> </li> <li>\u5e76\u67e5\u96c6<ul> <li>union-by-size \u53ca\u5176\u590d\u6742\u5ea6\u8bc1\u660e</li> <li>union-by-depth \u53ca\u5176\u590d\u6742\u5ea6\u8bc1\u660e</li> <li>\u8def\u5f84\u538b\u7f29</li> </ul> </li> <li>\u56fe</li> <li>\u6700\u77ed\u8def\u7b97\u6cd5<ol> <li>Floyd</li> <li>Dijkstra<ul> <li>\u5806\u4f18\u5316</li> <li>\u53ef\u4ee5\u5904\u7406\u8d1f\u6743\u8fb9\u5417\uff1f</li> </ul> </li> <li>Bellman-Ford &amp; SPFA</li> <li>\u62d3\u6251\u6392\u5e8f</li> </ol> </li> <li>\u5176\u4ed6\u56fe\u8bba\u7b97\u6cd5<ol> <li>\u6700\u5c0f\u751f\u6210\u6811<ul> <li>Kruskal</li> <li>Prim</li> </ul> </li> <li>\u6700\u5927\u6d41<ul> <li>\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\uff0c\u5e73\u9762\u56fe\u6700\u5927\u6d41\u7684\u5bf9\u5076\u56fe\u65b9\u6cd5\uff0c\u53ca\u5176\u5c40\u9650\u6027\uff08\u8bfe\u7a0b\u4e0d\u6d89\u53ca\uff0c\u4f46\u53ef\u4ee5\u52a0\u5feb\u624b\u7b97\u6700\u5927\u6d41\u7684\u901f\u5ea6\uff09</li> <li>\u589e\u5e7f\u8def\u7b97\u6cd5\uff1a<ol> <li>\u4ec0\u4e48\u662f\u53cd\u5411\u8fb9\uff1f</li> <li>Dinic &amp; \u5f53\u524d\u5f27\u4f18\u5316</li> </ol> </li> </ul> </li> </ol> </li> <li>DFS \u7684\u5e94\u7528\uff1a<ol> <li>\u6b27\u62c9\u8def\u5f84\uff08\u56de\u8def\uff09\u548c\u54c8\u5bc6\u5c14\u987f\u8def\u5f84</li> <li>\u65e0\u5411\u56fe\u7684\u53cc\u8fde\u901a\u5206\u91cf<ul> <li>\u5b9a\u4e49\uff08\u4e00\u4e2a\u5173\u8282\u70b9\u53ef\u4ee5\u51fa\u73b0\u5728\u591a\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u5417\uff1f\uff09</li> <li>tarjan \u7b97\u6cd5</li> </ul> </li> <li>\u6709\u5411\u56fe\u7684\u5f3a\u8054\u901a\u5206\u91cf<ul> <li>tarjan \u7b97\u6cd5</li> </ul> </li> </ol> </li> <li>\u6392\u5e8f\uff1a<ul> <li>\u63d2\u5165\u6392\u5e8f</li> <li>\u5e0c\u5c14\u6392\u5e8f</li> <li>\u5806\u6392\u5e8f</li> <li>\u5feb\u901f\u6392\u5e8f</li> <li>\u5f52\u5e76\u6392\u5e8f</li> <li>table sort</li> <li>bucket sort\uff08\u6876\u6392\u5e8f\uff09 &amp; radix sort\uff08\u57fa\u6570\u6392\u5e8f\uff09</li> <li>\u5176\u4ed6<ul> <li>\u7a33\u5b9a\u7684\u6392\u5e8f</li> <li>\u57fa\u4e8e\u4ea4\u6362\u7684\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u4e0b\u754c\u8bc1\u660e</li> </ul> </li> </ul> </li> <li>Hash<ul> <li>\u54c8\u5e0c\u51fd\u6570\uff1a\u81ea\u53d8\u91cf\u662f\u6574\u6570\u7684\u60c5\u51b5\uff0c\u81ea\u53d8\u91cf\u662f\u5b57\u7b26\u4e32\u7684\u60c5\u51b5</li> <li>\u5f00\u653e\u5bfb\u5740\u6cd5<ol> <li>linear probing \u5faa\u73af\u627e\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u76f4\u5230\u627e\u5230\u7a7a\u4f4d</li> <li>quadratic probing: \u5f80\u540e\u627e 1, 2, 4, ... \u4e2a\u4f4d\u7f6e</li> <li>double hashing: <code>f(i)=i*hash2(x)</code> \u63a2\u6d4b\u7684\u6b65\u957f\u4e0e key \u503c\u6709\u5173</li> <li>rehashing</li> </ol> </li> <li>seperate chaining: \u5bf9\u76f8\u540c\u54c8\u5e0c\u503c\u7528\u94fe\u8868\u5b58\u50a8</li> <li>\u5220\u9664\uff08tag\uff09    </li> </ul> </li> </ol>"},{"location":"notes/cs/ds/01/","title":"\u7b97\u6cd5\u5206\u6790\u57fa\u7840","text":""},{"location":"notes/cs/ds/01/#chapter-2-algorithm-analysis","title":"chapter 2  Algorithm Analysis \u7b97\u6cd5\u5206\u6790","text":""},{"location":"notes/cs/ds/01/#1","title":"1. \u5b9a\u4e49","text":"<p>An algorithm is a finite set of instructions that,if followed,accomplishes a particular task.</p> <p>\u7b97\u6cd5\u662f\u8ba1\u7b97\u673a\u53ef\u6267\u884c\u7684\u5b9e\u73b0\u7279\u5b9a\u4efb\u52a1\u7684\u6709\u9650\u6761\u6307\u4ee4\u7684\u96c6\u5408</p> <ul> <li> <p>\u5b83\u6ee1\u8db3\uff1a</p> <ul> <li>input</li> <li>output</li> <li>definiteness</li> <li>finiteness</li> <li>effectiveness</li> </ul> </li> <li> <p>\u7a0b\u5e8f\u4e0d\u662f\u5fc5\u987bfinite\u7684\uff08e.g \u64cd\u4f5c\u7cfb\u7edf\uff09</p> </li> </ul>"},{"location":"notes/cs/ds/01/#2","title":"2. \u7b97\u6cd5\u5206\u6790\u5185\u5bb9\uff1a","text":"<ul> <li>\u8fd0\u884c\u65f6\u95f4\uff1a\u4e0e\u673a\u5668\u548c\u7f16\u8bd1\u5668\u4ee5\u53ca\u6570\u636e\u96c6\u5927\u5c0f\u6709\u5173</li> <li>\u65f6\u95f4&amp;\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u53ea\u4e0e\u7b97\u6cd5\u6709\u5173</li> <li>\u5047\u8bbe\uff1a<ul> <li>\u6307\u4ee4\u6309\u987a\u5e8f\u6267\u884c</li> <li>\u6240\u6709\u6307\u4ee4\u90fd\u5f88\u7b80\u5355\uff0c\u53ea\u6d88\u8017\u4e00\u4e2a\u76f8\u540c\u7684\u65f6\u95f4\u5355\u5143</li> <li>\u6570\u636e\u89c4\u6a21\u56fa\u5b9a\uff0c\u6267\u884c\u7a7a\u95f4\u65e0\u9650</li> </ul> </li> <li>\u901a\u5e38\u4f1a\u5206\u6790 \\(T_{\\mathrm{avg}}(N)\\)(\u5e73\u5747\u60c5\u51b5)\u548c \\(T_{\\mathrm{worst}}(N)\\)(\u6700\u5dee\u60c5\u51b5)\uff0c\u5176\u4e2d\\(N\\)\u4e3a\u8f93\u5165\u6570\u636e\u89c4\u6a21\uff08\u53ef\u4ee5\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u5bf9\u5e94N\u4e3a\u591a\u5143\uff09</li> </ul>"},{"location":"notes/cs/ds/01/#3-asymptotic-notation","title":"3. Asymptotic Notation(\u6e10\u8fdb\u7b26\u53f7)","text":"<p>\u4e3a\u4e86\u9884\u6d4b\u5728N\u8d8b\u4e8e\u65e0\u7a77\u65f6\u7b97\u6cd5\u6b65\u9aa4\u7684\u589e\u957f\u901f\u5ea6</p> <ul> <li> <p>\u5927 \\(O\\): \\(T(N) = O(f(N))\\)\uff0c\u5982\u679c\u5b58\u5728\u5927\u4e8e0\u7684\u5e38\u6570 \\(c\\) \u548c \\(n_0\\) \u4f7f\u5f97\u5f53 \\(N\\geq n_0\\) \u65f6 \\(T(N)\\leq c\\cdot f(N)\\)</p> <ul> <li>\u6e10\u8fdb\u4e0a\u754c\uff0c\u5373 \\(T(N)\\) \u7684\u9636\u4e0d\u4f1a\u9ad8\u4e8e \\(f(N)\\)\uff08\u589e\u957f\u6bd4 \\(f(N)\\) \u6162\u6216\u76f8\u540c\uff0c&lt;=\uff09</li> </ul> </li> <li> <p>\u5927 \\(\\Omega\\): \\(T(N) = \\Omega(g(N))\\)\uff0c\u5982\u679c\u5b58\u5728\u5927\u4e8e0\u7684\u5e38\u6570 \\(c\\) \u548c \\(n_0\\) \u4f7f\u5f97\u5f53 \\(N\\geq n_0\\) \u65f6 \\(T(N)\\geq c\\cdot g(N)\\)</p> <ul> <li>\u6e10\u8fdb\u4e0b\u754c\uff0c\u5373 \\(T(N)\\) \u7684\u9636\u4e0d\u4f1a\u4f4e\u4e8e \\(f(N)\\)\uff08\u589e\u957f\u6bd4 \\(f(N)\\) \u5feb\u6216\u76f8\u540c\uff0c&gt;=\uff09</li> </ul> </li> <li> <p>\u5927 \\(\\Theta\\): \\(T(N) = \\Theta(h(N))\\)\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(T(N) = O(h(N))\\) \u4e14 \\(T(N) = \\Omega(h(N))\\)</p> <ul> <li>\u6e10\u8fdb\u7d27\u786e\u754c\uff0c\u5373 \\(T(N)\\) \u9700\u8981\u4e0e \\(h(N)\\) \u540c\u9636\uff08\u589e\u957f\u901f\u5ea6\u76f8\u540c =\uff09</li> </ul> </li> <li> <p>\u5c0f \\(o\\): \\(T(N) = o(p(N))\\)\uff0c\u5f53 \\(T(N) = O(p(N))\\) \u4e14 \\(T(N)\\ne \\Theta(p(N))\\) \u65f6</p> <ul> <li>\u975e\u6e10\u8fdb\u7d27\u786e\u4e0a\u754c\uff08\\(T(N)\\) \u589e\u957f\u6bd4 \\(p(N)\\) \u6162\uff0c&lt;\uff09</li> </ul> </li> <li> <p>\u5c0f \\(\\omega\\): \\(T(N) = \\omega(p(N))\\)\uff0c\u5f53 \\(T(N) = \\Omega(q(N))\\) \u4e14 \\(T(N)\\ne \\Theta(q(N))\\) \u65f6</p> <ul> <li>\u975e\u6e10\u8fdb\u7d27\u786e\u4e0b\u754c\uff08\\(T(N)\\) \u589e\u957f\u6bd4 \\(q(N)\\) \u5feb\uff0c&gt;\uff09</li> </ul> </li> </ul> \u4e3b\u5b9a\u7406 <p>Master Theorom\uff1a</p> <p>\u5047\u8bbe\u6709\u9012\u63a8\u5173\u7cfb \\(T(n)=aT(\\frac{n}{b})+f(n)\\)\uff0c\u5219\uff1a</p> <ul> <li> <p>\u5982\u679c\u5b58\u5728\u6b63\u7684\u5e38\u6570 \\(\\epsilon\\)\uff0c\u4f7f\u5f97 \\(f(n)=\\Omicron(n^ {\\log_{b}a-\\epsilon})\\)\uff0c\u5219 \\(T(n)=\\Theta(n^ {\\log_{b}a})\\)</p> </li> <li> <p>\u5982\u679c\u5b58\u5728\u975e\u8d1f\u5e38\u6570 \\(\\epsilon\\)\uff0c\u4f7f\u5f97 \\(f(n)=\\Omega(n^ {\\log_{b}a+\\epsilon})\\)\uff0c\u4e14\u5b58\u5728\u5e38\u6570 \\(c&lt;1\\) \u4f7f\u5f97\u5bf9\u4e8e\u5145\u5206\u5927\u7684 \\(n\\) \u6709 \\(af(\\frac{n}{b})\\leq cf(n)\\)\uff0c\u5219 \\(T(n)=\\Theta(f(n))\\)</p> </li> <li> <p>\u5982\u679c\u5b58\u5728\u975e\u8d1f\u5e38\u6570 \\(k\\)\uff0c\u4f7f\u5f97 \\(f(n)=\\Theta(n^ {\\log_{b}a}\\log^ {k}n)\\)\uff0c\u5219 \\(T(n)=\\Theta(n^ {\\log_{b}a}\\log^ {k+1}n)\\)</p> </li> </ul> <ul> <li>\u89c4\u5219\uff1a<ul> <li>\u82e5\\(T_1(N)\\) = \\(O(f(N))\\), \\(T_2(N) = O(g(N))\\):<ul> <li>\\(T_1(N)\\) + \\(T_2(N)\\) = \\(\\mathrm{max}(O(f(N)),O(g(N)))\\),</li> <li>\\(T_1(N)\\cdot T_2(N) = O(f(N)\\cdot g(N))\\)</li> </ul> </li> <li>\u82e5 \\(T(N)\\)\u4e3a\u6700\u9ad8\u6b21\u4e3a\\(k\\)\u6b21\u7684\u5173\u4e8eN\u7684\u591a\u9879\u5f0f\uff0c\u5219\\(T(N) = \\Theta((N^k))\\)</li> <li>\u5bf9\u4e8e\u4efb\u610f\u5e38\u6570\\(k\\),\u5747\u6709\\(\\log^kN = O(N)\\)</li> <li>\u5177\u4f53\u800c\u8a00\uff1a<ul> <li>for loop:   \u5185\u90e8\u8bed\u53e5\u6700\u957f\u65f6\u95f4\uff08\u5305\u62ecfor\u7684\u8fb9\u754c\u6761\u4ef6\u5224\u65ad\uff09\u4e58\u4ee5\u5faa\u73af\u6b21\u6570</li> <li>nested for loop:   \u5404\u4e2afor loop \u9010\u6b21\u76f8\u4e58</li> <li>if_else:   \u4e0d\u8d85\u8fc7\u5224\u65ad\u6761\u4ef6\u65f6\u95f4\u4e0e\u6700\u8017\u65f6\u8bed\u5757\u65f6\u95f4\u4e4b\u548c</li> </ul> </li> </ul> </li> </ul>"},{"location":"notes/cs/ds/01/#_2","title":"\u4f8b\uff1a\u6700\u5927\u5b50\u5e8f\u5217\u548c\u95ee\u9898","text":""},{"location":"notes/cs/ds/01/#on3","title":"O(N\u00b3)","text":"<p>\u76f4\u63a5\u679a\u4e3e\u5f00\u5934\u7ed3\u5c3e\uff0c\u5e76\u8ba1\u7b97\u4e2d\u95f4\u5b50\u5e8f\u5217\u548c\uff1a</p> C<pre><code>int MaxSubsequenceSum(const int a[], int N) {\n    int res = 0;\n    for (int i = 0; i &lt; N; ++i) {\n        for (int j = i; j &lt; N; ++j) {\n            int now = 0;\n            for (k = i; k &lt;= j; ++k) {\n                now += a[k];\n            }\n            res = max(res, now);\n        }\n    }\n    return res;\n} \n</code></pre>"},{"location":"notes/cs/ds/01/#on2","title":"O(N\u00b2)","text":"<p>\u540c\u6837\u679a\u4e3e\u5f00\u5934\u7ed3\u5c3e\uff0c\u4e0d\u8fc7\u52a8\u6001\u8ba1\u7b97\u5b50\u5e8f\u5217\u548c\uff0c\u7701\u53bb\u6700\u5185\u5c42\u5faa\u73af     C<pre><code>int MaxSubsequenceSum(const int a[], int N) {\n    int res = 0;\n    for (int i = 0; i &lt; N; ++i) {\n        int now = 0;\n        for (int j = i; j &lt; N; ++j) {\n            now += a[j];\n            res = max(res, now);\n        }\n    }\n    return res;\n    }\n</code></pre></p>"},{"location":"notes/cs/ds/01/#onlogn","title":"O(NlogN)","text":"<p>\u4f7f\u7528\u5206\u6cbb\u7b97\u6cd5</p> \\[     \\begin{align*}     T(N) &amp;= 2T(N/2)+cN,\\quad T(1) = O(1) \\\\     &amp;= 2\\left(2T(N/2^2)+cN/2\\right)+cN \\\\     &amp;= 2^kO(1) + ckN\\qquad\\text{where }N/2^k=1 \\\\     &amp;= O(N\\log N)     \\end{align*}     \\]"},{"location":"notes/cs/ds/01/#on","title":"O(N)","text":"<p>\u52a8\u6001\u89c4\u5212\u601d\u60f3     C<pre><code>int MaxSubsequenceSum(const int a[], int N) {\n    int res = 0, now = 0;\n    for (int i = 0; i &lt; N; ++i) {\n        now += a[i];\n        res = max(res, now);\n        now = max(now, 0);\n    }\n    return res;\n}\n</code></pre></p>"},{"location":"notes/cs/ds/01/#_3","title":"\u5bf9\u6570\u590d\u6742\u5ea6\u76f8\u5173","text":"<ul> <li>\u5bf9\u5206\u67e5\u627e\uff1a\\(\\Omicron(\\log(N))\\)</li> <li> <p>\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff1a\\(\\Omicron(\\log(N))\\)\uff0c\u56e0\u4e3a \\(\\text{if}\\;m&gt;n,\\;\\text{then}\\;m\\;\\text{mod}\\;n&lt;m/2\\)</p> gcd<pre><code>int gcd(int a, int b) {\n    return b == 0 ? a : gcd(b, a % b);\n}\n</code></pre> </li> <li> <p>\u5feb\u901f\u5e42\uff1a\\(\\Omicron(\\log(N))\\)\uff0c\u5373\u4e8c\u8fdb\u5236\u53d6\u5e42</p> \u975e\u9012\u5f52\u5b9e\u73b0\u9012\u5f52\u5b9e\u73b0 C<pre><code>long long binPow(long long a, long long b)\n{\n    long long res = 1;\n    while (b &gt; 0) {\n        if (b &amp; 1) res = res * a;\n        a = a * a;\n        b &gt;&gt;= 1;\n    }\n    return res;\n}\n</code></pre> C<pre><code>long long binPow(long long a, long long b)\n{\n    if (0 == b) return 1;\n    long long res = binPow(a, b / 2);\n    if (b % 2) {\n        return res * res * a;\n    } else {\n        return res * res;\n    }\n}\n</code></pre> </li> </ul>"},{"location":"notes/cs/ds/02/","title":"\u6808\u4e0e\u961f\u5217","text":""},{"location":"notes/cs/ds/02/#_2","title":"\u7ebf\u6027\u8868","text":"<ul> <li>\u6570\u7ec4\u5b9e\u73b0</li> <li>\u94fe\u8868\u5b9e\u73b0<ul> <li>\u54e8\u5175\u94fe\u8868\uff0c\u53cc\u5411\u5faa\u73af\u94fe\u8868</li> </ul> </li> <li>\u8865\u5145\uff0c\u7a00\u758f\u77e9\u9635\uff08sparse matrix\uff09\u662f\u5927\u90e8\u5206\u5143\u7d20\u5747\u4e3a 0 \u7684\u77e9\u9635<ul> <li>\u591a\u7ef4\u6570\u7ec4\u5b9e\u73b0\uff0c\u7a7a\u95f4\u6d6a\u8d39\u4e25\u91cd</li> <li>\u591a\u91cd\u94fe\u8868\uff08multilist\uff09\u5b9e\u73b0\uff0c\u4e5f\u79f0\u5341\u5b57\u94fe\u8868\uff08orthogonal linked list\uff09</li> </ul> </li> <li>\u8865\u5145\uff0c\u94fe\u8868\u7684\u6e38\u6807\u5b9e\u73b0\uff08no pointer\uff09<ul> <li>\u4f7f\u7528\u5168\u5c40\u7ed3\u6784\u4f53\u6570\u7ec4\u6765\u5b9e\u73b0\u94fe\u8868\uff0c\u7ef4\u62a4\u5176\u4e2d\u4e00\u4e2a\u5206\u533a freelist \u6765\u5b9e\u73b0 malloc \u548c free</li> </ul> </li> </ul>"},{"location":"notes/cs/ds/02/#_3","title":"\u6808\u548c\u961f\u5217\u57fa\u7840","text":"<ul> <li> <p>\u6808\uff08stack\uff09\u662f last-in-first-out (LIFO) \u7684</p> C<pre><code>struct Stack {\n    int capacity;\n    int topOfStack;\n    ElementType *array;\n}\n</code></pre> </li> <li> <p>\u6808\u7684\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ul> <li>\u5165\u6808\uff08push\uff09\uff0c\u5c06\u5143\u7d20\u538b\u5165\u6808\u9876</li> <li>\u51fa\u6808\uff08pop\uff09\uff0c\u5c06\u6808\u9876\u5143\u7d20\u51fa\u6808</li> <li>\u67e5\u770b\u6808\u9876\u5143\u7d20\uff08top\uff09</li> </ul> </li> <li> <p>\u961f\u5217\uff08queue\uff09\u662f first-in-first-out (FIFO) \u7684</p> C<pre><code>struct Queue {\n    int capacity;\n    int front, rear;\n    ElementType *array;\n}\n</code></pre> </li> <li> <p>\u961f\u5217\u7684\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ul> <li>\u5165\u961f\uff08enqueue\uff09\uff0c\u5728\u961f\u5c3e\u63d2\u5165\u5143\u7d20</li> <li>\u51fa\u961f\uff08dequeue\uff09\uff0c\u5728\u961f\u9996\u5f39\u51fa\u5143\u7d20</li> </ul> </li> <li>\u5faa\u73af\u961f\u5217</li> </ul>"},{"location":"notes/cs/ds/02/#_4","title":"\u4e2d\u7f00\u3001\u540e\u7f00\u4e0e\u524d\u7f00","text":"<ul> <li>\u540e\u7f00\uff08postfix\uff09\u8868\u8fbe\u5f0f\uff0c\u6240\u6709\u64cd\u4f5c\u7b26\u7f6e\u4e8e\u64cd\u4f5c\u6570\u7684\u540e\u9762<ul> <li>\u540e\u7f00\u8868\u8fbe\u5f0f\u4e0d\u518d\u8003\u8651\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u4e5f\u4e0d\u9700\u8981\u62ec\u53f7</li> </ul> </li> <li>\u540e\u7f00\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c\\(\\Omicron(N)\\)\uff0c\u7ef4\u62a4\u4e00\u4e2a\u64cd\u4f5c\u6570\u6808<ol> <li>\u8bfb\u5230\u64cd\u4f5c\u6570\uff0c\u5165\u6808</li> <li>\u8bfb\u5230\u64cd\u4f5c\u7b26\uff0c\u5c06\u6808\u9876\u524d\u4e24\u4e2a\u64cd\u4f5c\u6570\u4f9d\u6b21\u51fa\u6808\uff0c\u8fdb\u884c\u8fd0\u7b97\uff0c\u5e76\u628a\u8fd0\u7b97\u7ed3\u679c\u5165\u6808</li> <li>\u8868\u8fbe\u5f0f\u8bfb\u5b8c\u540e\uff0c\u5c06\u6808\u9876\u5143\u7d20\u51fa\u6808\uff0c\u5373\u4e3a\u8868\u8fbe\u5f0f\u7684\u503c</li> </ol> </li> <li>\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u7ef4\u62a4\u4e00\u4e2a\u64cd\u4f5c\u7b26\u6808<ol> <li>\u8bfb\u5230\u64cd\u4f5c\u6570\uff0c\u76f4\u63a5\u8f93\u51fa</li> <li>\u8bfb\u5230\u64cd\u4f5c\u7b26\uff0c\u5c06\u5176\u4e0e\u6808\u9876\u64cd\u4f5c\u7b26\u6bd4\u8f83\u4f18\u5148\u7ea7<ul> <li>pre(top) &gt;= pre(tmp)\uff0c\u6808\u9876\u64cd\u4f5c\u7b26\u51fa\u6808\uff0c\u5e76\u91cd\u590d\u6b65\u9aa4 b.</li> <li>pre(top) &lt; pre(tmp) \u6216\u8005\u6808\u4e3a\u7a7a\uff0c\u64cd\u4f5c\u7b26\u76f4\u63a5\u5165\u6808</li> <li>\u6ce8\u610f\uff0c\u8bfb\u5230\u5de6\u62ec\u53f7\u76f4\u63a5\u5165\u6808\uff0c\u8bfb\u5230\u53f3\u62ec\u53f7\u5c06\u6808\u4e2d\u5143\u7d20\u4f9d\u6b21\u51fa\u6808\u76f4\u81f3\u5de6\u62ec\u53f7\uff0c\u4e22\u5f03\u8fd9\u5bf9\u62ec\u53f7</li> <li>\u6ce8\u610f\uff0c\u4e0a\u8ff0\u9488\u5bf9\u5de6\u7ed3\u5408\u64cd\u4f5c\u7b26\uff0c\u5bf9\u4e8e\u53f3\u7ed3\u5408\u64cd\u4f5c\u7b26\uff08\u5982 \\(\\text{\\textasciicircum}\\)\uff09\uff0c\u4f18\u5148\u7ea7\u76f8\u7b49\u65f6\u76f4\u63a5\u5165\u6808</li> </ul> </li> <li>\u8868\u8fbe\u5f0f\u8bfb\u5b8c\u540e\uff0c\u5c06\u6808\u4e2d\u5143\u7d20\u5168\u90e8\u4f9d\u6b21\u51fa\u6808</li> </ol> </li> <li>\u524d\u7f00\uff08prefix\uff09\u8868\u8fbe\u5f0f\uff0c\u6240\u6709\u64cd\u4f5c\u7b26\u7f6e\u4e8e\u64cd\u4f5c\u6570\u7684\u524d\u9762<ul> <li>\u524d\u7f00\u8868\u8fbe\u5f0f\u4e0d\u518d\u8003\u8651\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u4e5f\u4e0d\u9700\u8981\u62ec\u53f7</li> </ul> </li> <li>\u524d\u7f00\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c\u548c\u540e\u7f00\u6c42\u503c\u57fa\u672c\u4e00\u81f4\uff0c\u552f\u4e00\u533a\u522b\u662f\u524d\u7f00\u81ea\u53f3\u5411\u5de6\u626b\u63cf\u8868\u8fbe\u5f0f</li> <li>\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u524d\u7f00\u8868\u8fbe\u5f0f\uff0c\u548c\u4e2d\u7f00\u8f6c\u540e\u7f00\u57fa\u672c\u4e00\u81f4\uff0c\u533a\u522b\u5982\u4e0b\uff1a<ul> <li>\u81ea\u53f3\u5411\u5de6\u626b\u63cf\u8868\u8fbe\u5f0f</li> <li>\u5de6\u62ec\u53f7\u548c\u53f3\u62ec\u53f7\u76f8\u53cd</li> <li>\u5de6\u7ed3\u5408\u64cd\u4f5c\u7b26\u548c\u53f3\u7ed3\u5408\u64cd\u4f5c\u7b26\u76f8\u53cd\uff0c\u4f53\u73b0\u5728\u4f18\u5148\u7ea7\u76f8\u7b49\u65f6\u7684\u5904\u7406</li> </ul> </li> <li>\u8868\u8fbe\u5f0f\u6811\uff08expression tree\uff09\u662f\u4e00\u79cd\u4e8c\u53c9\u6811\uff0c\u53f6\u5b50\u8282\u70b9\u5747\u4e3a\u64cd\u4f5c\u6570\uff0c\u5176\u4f59\u8282\u70b9\u5747\u4e3a\u64cd\u4f5c\u7b26</li> <li>\u4e2d\u7f00\u8868\u8fbe\u5f0f\u5efa\u6811\uff0c\u7ef4\u62a4\u4e24\u4e2a\u6808\uff0coptr \u6808\u5b58\u50a8\u64cd\u4f5c\u7b26\uff0cexpt \u6808\u5b58\u50a8\u8868\u8fbe\u5f0f\u6811\u6839\u8282\u70b9<ol> <li>\u8bfb\u5230\u64cd\u4f5c\u6570\uff0c\u751f\u6210\u4e00\u4e2a\u53ea\u6709\u6839\u8282\u70b9\u7684\u8868\u8fbe\u5f0f\u6811\uff0c\u5165\u6808 expt</li> <li>\u8bfb\u5230\u64cd\u4f5c\u7b26\uff0c\u5c06\u5176\u4e0e optr \u6808\u9876\u64cd\u4f5c\u7b26\u6bd4\u8f83\u4f18\u5148\u7ea7<ul> <li>pre(top) &gt;= pre(tmp)\uff0c\u6808\u9876\u64cd\u4f5c\u7b26\u51fa\u6808\uff0c\u5c06 expt \u6808\u9876\u524d\u4e24\u68f5\u6811\u51fa\u6808\uff0c\u751f\u6210\u4ee5\u8be5\u64cd\u4f5c\u7b26\u4e3a\u6839\u8282\u70b9\u3001\u4ee5\u8fd9\u4e24\u68f5\u6811\u4e3a\u5de6\u53f3\u5b50\u6811\u7684\u8868\u8fbe\u5f0f\u6811\uff0c\u5165\u6808 expt\uff1b\u91cd\u590d\u6b65\u9aa4 b.</li> <li>pre(top) &lt; pre(tmp) \u6216\u8005\u6808\u4e3a\u7a7a\uff0c\u64cd\u4f5c\u7b26\u76f4\u63a5\u5165\u6808</li> <li>\u6ce8\u610f\uff0c\u8bfb\u5230\u5de6\u62ec\u53f7\u76f4\u63a5\u5165\u6808\uff0c\u8bfb\u5230\u53f3\u62ec\u53f7\u5c06\u6808\u4e2d\u5143\u7d20\u4f9d\u6b21\u51fa\u6808\u76f4\u81f3\u5de6\u62ec\u53f7\uff0c\u4e22\u5f03\u8fd9\u5bf9\u62ec\u53f7</li> <li>\u6ce8\u610f\uff0c\u4e0a\u8ff0\u9488\u5bf9\u5de6\u7ed3\u5408\u64cd\u4f5c\u7b26\uff0c\u5bf9\u4e8e\u53f3\u7ed3\u5408\u64cd\u4f5c\u7b26\uff08\u5982 \\(\\text{\\textasciicircum}\\)\uff09\uff0c\u4f18\u5148\u7ea7\u76f8\u7b49\u65f6\u76f4\u63a5\u5165\u6808</li> </ul> </li> <li>\u8868\u8fbe\u5f0f\u8bfb\u5b8c\u540e\uff0c\u5c06 expt \u6808\u9876\u5143\u7d20\u51fa\u6808\uff0c\u5373\u4e3a\u8868\u8fbe\u5f0f\u6811</li> </ol> </li> </ul>"},{"location":"notes/cs/ds/hw/","title":"\u4f5c\u4e1a\u8ba2\u6b63","text":""},{"location":"notes/cs/ds/hw/#week-1","title":"week 1","text":"\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97 <p>The recurrent equations for the time complexities of programs P1 and P2 are:</p> <ul> <li>P1: T(1)=1,T(N)=T(N/3)+1</li> <li>P2: T(1)=1,T(N)=3T(N/3)+1</li> </ul> <p>Then the correct conclusion about their time complexities is:</p> <p>A.they are both O(logN)</p> <p>B.O(logN) for P1, O(N) for P2</p> <p>C.they are both O(N)</p> <p>D.O(logN) for P1, O(NlogN) for P2</p> solution <p>B. P1\u7c7b\u4f3c\u4e8e\u4e8c\u5206\uff0cP2\u663e\u7136\u4e3a\u7ebf\u6027\uff0c\u60f3\u8ba1\u7b97\u4e5f\u53ef\u4ee5\u9012\u63a8\u5230\\(O(1)\\).\u4f8b\u5982p1:</p> <p>$T(N) = T(N/3) + 1 = T(N/3^2) + 2 = \\cdots = T(N/3^k) + k = \\cdots $</p> <p>Let $ N/3^k = 1$, then $k = \\log_{3}{N} $</p>"},{"location":"notes/cs/logic/","title":"\u8ba1\u7b97\u673a\u903b\u8f91\u8bbe\u8ba1\u57fa\u7840","text":"<p>Abstract</p> <p>\u6d59\u5927\u8bfe\u7a0b\u7b14\u8bb0</p> <ul> <li>\u8001\u5e08\uff1a\u8463\u4e9a\u6ce2</li> <li>\u57fa\u672c\u6d41\u7a0b\u662f\uff1a\u8bfe\u524d\u4ece\u5927Q\u8001\u5e08\u90a3\u91cc\u7167\u6284\u4e00\u4efd\uff0c\u8bfe\u4e0a\u8ddf\u8001\u5e08\u505a\u4e00\u5b9a\u5220\u51cf\u4e0e\u8865\u5145\uff0c\u8bfe\u540e\u53c2\u8003\u4fee\u4f6c\u518d\u8fdb\u4e00\u6b65\u4fee\u6539\uff08\u56e0\u4e3a\u6211\u53d1\u73b0Q\u8001\u5e08\u51e0\u4e4e\u5c31\u662f\u6309\u7167PPT\u548c\u8001\u5e08\u8bb2\u8bfe\u987a\u5e8f\u6765\u7684\uff0c\u4fee\u4f6c\u662f\u81ea\u5df1\u603b\u7ed3\u7684\uff0c\u903b\u8f91\u66f4\u8fde\u8d2f\uff09</li> </ul>"},{"location":"notes/cs/logic/01/","title":"Digital Systems and Information","text":"Abstract <ol> <li>\u6570\u5b57\u7cfb\u7edf\uff1a\u6570\u5b57\u4fe1\u53f7\uff0c\u5178\u578b\u6570\u5b57\u7cfb\u7edf\u3002   Digital Systems: Digital signal, typical digital systems</li> <li>\u8ba1\u7b97\u673a\u5185\u4fe1\u606f\u8868\u793a\u6cd5   Information Representation</li> <li> <p>\u6570\u5236    Number systems   </p> <ul> <li>\u8fdb\u4f4d\u8ba1\u6570\u5236\u7684\u6982\u5ff5\u548c\u5341\u3001\u4e8c\u3001\u5341\u516d\u3001\u516b\u5236\u6570\u7684\u8868\u793a Positive radix, positional number systems, decimal, binary, octal and hexadecimal  </li> <li>\u4e0d\u540c\u8fdb\u4f4d\u6570\u5236\u4e4b\u95f4\u7684\u8f6c\u6362 Conversion Between Bases</li> </ul> </li> <li> <p>\u7f16\u7801\u7684\u6982\u5ff5\u53ca\u5e26\u7b26\u53f7\u4e8c\u8fdb\u5236\u6570\u7684\u7f16\u7801\u3002 Representation for unsigned and signed binary numbers  </p> <ul> <li>\u771f\u503c\u3001\u6307\u5b9a\u957f\u5ea6\u7684\u673a\u5668\u6570\uff1a\u539f\u7801\u3001\u53cd\u7801\u3001\u8865\u7801\u3002 Magnitude, Signed-Magnitude, Signed-1\u2019s Complement, Signed-2\u2019s Complement    </li> <li>\u5341\u8fdb\u5236\u6570\u7684\u4e8c\u8fdb\u5236\u7f16\u7801\uff1aBCD \u7801 Binary coded decimal (BCD)  </li> <li>\u5b57\u7b26\u7f16\u7801\uff1aASCII ASCII Character Codes</li> </ul> </li> <li> <p>\u5404\u79cd\u4fe1\u606f\u7684\u7f16\u7801 Non-numeric Binary Codes</p> </li> </ol>"},{"location":"notes/cs/logic/01/#digital-systems","title":"Digital Systems","text":""},{"location":"notes/cs/logic/01/#types-of-digital-systems","title":"Types of Digital Systems","text":"\u4f55\u4e3a\u201c\u72b6\u6001\u201d\uff1f <p>\u8463\u8001\u5e08\uff1a\u201c\u5bf9\u4e8e\u6b64\u524d\u82e5\u5e72\u5468\u671f\u7684\u8f93\u5165\u6570\u636e\u7684\u62bd\u8c61\u201d</p> <p>\u6709\u72b6\u6001\u540e\uff0c\u7cfb\u7edf\u8f93\u51fa\u5fc5\u5b9a\u4e0e\u5f53\u524d\u72b6\u6001\u6709\u5173</p> <ul> <li> <p>no state present(\u65e0\u72b6\u6001):    Combinational Logic System\uff08\u7ec4\u5408\u903b\u8f91\u7cfb\u7edf\uff09\uff1a</p> <p>\u8f93\u5165\u4e00\u65e6\u786e\u5b9a\uff0c\u4e00\u5b9a\u6709\u552f\u4e00\u7684\u8f93\u51fa\u4e14\u53ef\u9884\u6d4b / \u4efb\u610f\u65f6\u523b\u7684\u8f93\u51fa\u4ec5\u53d6\u51b3\u4e8e\u8be5\u65f6\u523b\u7684\u8f93\u5165    (output = Function(Input)).  </p> </li> <li> <p>state present(\u5b58\u5728\u72b6\u6001):     Sequential System \uff08\u65f6\u5e8f\u7cfb\u7edf\uff09</p> <p>\u4efb\u610f\u65f6\u523b\u7684\u8f93\u51fa\u5373\u53d6\u51b3\u4e8e\u8be5\u65f6\u523b\u7684\u8f93\u5165\uff0c\u4e5f\u53d6\u51b3\u4e8e\u7535\u8def\u7684\u5f53\u524d\u72b6\u6001</p> <p>\u53c8\u5206\u4e24\u7c7b\uff1a</p> <ol> <li> <p>synchronous (\u540c\u6b65\uff0c\u6309\u7279\u5b9a\u5468\u671f\u66f4\u65b0):state update at discrete times</p> </li> <li> <p>asynchronous (\u5f02\u6b65\uff0c\u65e0\u7279\u5b9a\u5468\u671f) :state updated at any time</p> </li> </ol> </li> <li> <p>State = Function(State, Input)  </p> </li> <li> <p>Output = Function(State) or Function(State, Input)  </p> state \u4e0d\u80fd\u53ea\u548c input \u6709\u5173\u5417? <p>\u2014\u2014 \u4e0d\u80fd, \u8fd9\u6837 state \u7684\u5b58\u5728\u5c31\u6ca1\u6709\u5fc5\u8981\u4e86(\u6bcf\u6b21\u7684 state \u53ea\u662f\u4f5c\u4e3a\u4e86 input \u5230 output \u7684\u4e2d\u95f4\u91cf.) </p> </li> </ul> <p>Example</p> <p>\u6c7d\u8f66\u4e0a\u7684\u91cc\u7a0b\u8868, \u8f93\u5165 count up \u548c reset \u4fe1\u53f7. \u5982\u679c count up \u5c31\u628a\u91cc\u7a0b\u52a0\u4e00. \u8f93\u51fa\u5c31\u662f\u53ef\u89c6\u5316\u7684\u663e\u5f0f\u91cc\u7a0b. \u72b6\u6001\u5c31\u662f\u91cc\u7a0b\u8868\u7684\u503c. \u8fd9\u662f\u975e\u540c\u6b65\u7684, \u56e0\u4e3a\u66f4\u65b0\u4fe1\u53f7\u7684\u65f6\u95f4\u4e0d\u4f9d\u8d56\u7edf\u4e00\u65f6\u949f, \u5728\u4efb\u610f\u65f6\u523b\u90fd\u53ef\u4ee5\u53d1\u751f.  </p>"},{"location":"notes/cs/logic/01/#embedded-systems","title":"Embedded Systems(\u5d4c\u5165\u5f0f\u7cfb\u7edf)","text":"<p>analog input(\u6a21\u62df\u8f93\u5165):  </p> <ul> <li>A-to-D: \u628a\u6a21\u62df\u4fe1\u53f7\u8f6c\u5316\u4e3a\u6570\u5b57\u4fe1\u53f7(\u5904\u7406\u5668\u4e0d\u80fd\u5904\u7406\u6a21\u62df\u4fe1\u53f7)  </li> <li>D-to-A: \u5904\u7406\u540e\u628a\u6570\u5b57\u4fe1\u53f7\u8f6c\u5316\u4e3a\u6a21\u62df\u4fe1\u53f7</li> <li>\u4e5f\u6709\u5176\u4ed6\u7684\u6570\u5b57\u8f93\u5165\u8f93\u51fa(\u5982\u6309\u952e)</li> </ul> <p>\u6838\u5fc3: AD &amp; DA, \u5d4c\u5165\u5f0f\u7cfb\u7edf\u533a\u522b\u4e8e\u65e5\u5e38\u8ba1\u7b97\u673a</p> A to D <p>\u5bf9\u7a7a\u8c03, input \u662f\u6e29\u5ea6\u4f20\u611f\u5668(\u7535\u963b). \u8f93\u5165\u662f\u4e00\u4e2a\u7535\u538b\u503c, \u7a7a\u8c03\u5982\u4f55\u7406\u89e3\u7535\u538b\u53d8\u5316? </p> <p>\u8ba1\u7b97\u673a\u6709\u4ee5\u4e0b\u4e24\u4e2a\u884c\u4e3a:</p> <ul> <li>\u5468\u671f\u6027\u91c7\u6837: \u91c7\u6837\u7684\u5468\u671f\u662f\u7531\u8f93\u5165\u4fe1\u53f7\u7684\u4fe1\u53f7\u9891\u7387\u51b3\u5b9a.(\u9999\u519c\u5b9a\u7406\u786e\u5b9a\u91c7\u6837\u9891\u7387)  </li> <li>\u91cf\u5316: \u6309 \\(2^n\\) \u7b49\u5206\u6570\u636e\uff0c\u4f7f\u6570\u636e\u79bb\u6563\u5316(\u5b58\u5728\u8bef\u5dee),n\u51b3\u5b9a\u91c7\u6837\u7cbe\u5ea6 </li> </ul> D to A <ul> <li>DA\u8f6c\u6362</li> <li>\u6ee4\u6ce2</li> </ul> Extra <p>\u9999\u519c\u5b9a\u7406\uff1a\u91c7\u6837\u9891\u7387\u81f3\u5c11\u5728\u539f\u4fe1\u53f7\u9891\u7387\u7684\u4e24\u500d\u4ee5\u4e0a</p>"},{"location":"notes/cs/logic/01/#information-representation","title":"Information Representation","text":"<p>Binary values are represented abstractly by:  </p> <ul> <li>digits 0 and 1</li> <li>words (symbols) False (F) and True (T)</li> <li>words (symbols) Low (L) and High (H) </li> <li>and words On and Off.</li> </ul> <p>Binary values are represented by values or ranges of values of physical quantities</p> <p>\u4fe1\u53f7\u7684\u5206\u7c7b: </p> <p>\u4e3a\u4ec0\u4e48\u9009\u62e9\u4e8c\u8fdb\u5236\u6570\u503c\u8868\u793a? ---\u66f4\u597d\u5bf9\u6297\u6570\u636e\u4f20\u8f93\u4e2d\u7684\u5e72\u6270 \u8fde\u7eed\u4fe1\u53f7\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u96be\u514d\u8870\u51cf</p> <p>\u566a\u58f0\u5bb9\u9650 0.3V(0.6-0.9 0.1-0.4\u4e4b\u95f4\u53ef\u4ee5\u7ee7\u7eed\u4fdd\u7559\u4fe1\u606f\u7684\u6b63\u786e\u6027)  </p>"},{"location":"notes/cs/logic/01/#number-systems","title":"Number Systems","text":"<p>\u9996\u5148\u6765\u770b\u8fdb\u5236\u8f6c\u6362\uff1a</p> <p>\u8ba1\u7b97\u673a\u4e2d\u5e38\u89c1\u8fdb\u5236\u4e3a \u4e8c\u8fdb\u5236(binary)\uff0c\u516b\u8fdb\u5236(octal)\uff0c\u5341\u8fdb\u5236(decimal)\u548c\u5341\u516d\u8fdb\u5236(hexadecimal)</p> <p>\u901a\u5e38\u4e00\u4e2a \\(r\\) \u8fdb\u5236\u6570\u53ef\u4ee5\u8868\u793a\u5982\u4e0b: \\(A_{n-1}A_{n-2}\\cdots A_1A_0.A_{-1}A_{-2}\\dots A_{-m}\\)</p> <p>\u5176\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u6570\u6362\u7b97\u4e3a\uff1a</p> <p>\\(Number_r = (\\sum\\limits_{i=0}^{i=n-1}A_i\\times r^i)+(\\sum\\limits_{j=-m}^{j=-1}A_j\\times r^j)\\)</p> <p>\u6574\u6570\u4e0e\u5c0f\u6570\u5206\u5f00\u8f6c\u6362 </p> <p>\u5c0f\u6570\u8f6c\u6362</p> <p>\u5341\u8fdb\u5236\u8f6c\u5316\u4e3a\\(x\\)\u8fdb\u5236\uff1a\u5c0f\u6570\u90e8\u5206\u4e58\\(x\\)\u53d6\u6574\uff0c\u4f59\u4e0b\u5c0f\u6570\u90e8\u5206\u91cd\u590d\u6b64\u6b65\u9aa4\u81f3\u7ed3\u675f</p> <p>2\u8f6c8/16\u8fdb\u5236: \u5c0f\u6570\u70b9\u5411\u4e24\u8fb9\u6bcf\u6b21\u53d63/4\u4f4d\uff0c\u4e0d\u591f\u5219\u8865\u96f6</p> <p>\u6ce8\u610f</p> <ul> <li> <p>\u5341\u8fdb\u5236\u5c0f\u6570\u8f6c\u6362\u96be\u514d\u9664\u4e0d\u5c3d\uff0c\u8981\u6839\u636e\u8981\u6c42\u7cbe\u5ea6\u4fdd\u7559\u3002</p> </li> <li> <p>\u8865\u96f6\uff1a</p> <ul> <li>\u6574\u6570\u90e8\u5206\u8865\u96f6\u5728\u5de6\u4fa7\uff08\u4e0d\u8865\u6ca1\u5f71\u54cd\uff09</li> <li>\u800c\u5c0f\u6570\u90e8\u5206\u8865 0 \u662f\u5728\u53f3\u4fa7(\u6700\u540e) \\((11 111 101. 010 011 110)_2 \\neq (375.233)_8\\)  \u6700\u540e\u8981\u8865 0, \u5e94\u4e3a \\((375.236)_8\\)</li> </ul> </li> </ul> Info <ul> <li>\\(2^{10} = 1024\\) is Kilo, denoted \"K\".  </li> <li>\\(2^{20}\\) is Mega, denoted \"M\".  </li> <li>\\(2^{30}\\) is Giga, denoted \"G\".  </li> <li>\\(2^{40}\\) is Tera, denoted \"T\".  </li> </ul>"},{"location":"notes/cs/logic/01/#binary-arithmetic","title":"Binary Arithmetic \uff08\u4e8c\u8fdb\u5236\u8fd0\u7b97\uff09","text":"<p>\u4e8c\u8fdb\u5236\u52a0\u6cd5: \u5168\u52a0\u5668</p> <p>\u4e8c\u8fdb\u5236\u51cf\u6cd5\uff1a\u6ce8\u610f0-1=11\uff1b\u8ba1\u7b97\u673a\u4e2d\u4f9d\u9760\u8865\u7801\u5b9e\u73b0</p> <p>\u4e8c\u8fdb\u5236\u4e58\u6cd5: \u6839\u636e\u4e58\u6570\u5bf9\u5e94\u4f4d\u662f 1 \u8fd8\u662f 0, \u5982\u679c\u662f 1 \u5c31\u79fb\u4f4d\u5e76\u52a0\u8d77\u6765.(\u548c\u5341\u8fdb\u5236\u4e58\u6cd5\u6ca1\u533a\u522b)</p>"},{"location":"notes/cs/logic/01/#binary-coding","title":"Binary Coding(\u4e8c\u8fdb\u5236\u7f16\u7801)","text":"<p>\u4e00\u4e2a\u6570\u503c\u5bf9\u5e94\u4e00\u4e2a\u7b26\u53f7\uff08\u4f8b\u5982\u4ea4\u901a\u4fe1\u53f7\u706f\uff09</p> <p>\u4e3b\u8981\u6709\u4e0b\u9762\u51e0\u79cd\uff1a</p> <ul> <li>Numeric  <ul> <li>\u5fc5\u987b\u8868\u8fbe\u4e00\u5b9a\u8303\u56f4\u5185\u7684\u6570\u5b57\uff1b</li> <li>\u652f\u6301\u7b80\u5355\u4e14\u666e\u904d\u7684\u8ba1\u7b97\uff1b</li> <li>\u548c\u4e8c\u8fdb\u5236\u6570\u672c\u8eab\u5173\u8054\u8f83\u5927</li> </ul> </li> <li>Non-numeric  <ul> <li>\u76f8\u5bf9\u7075\u6d3b\uff0c\u4ea6\u5373\u4e0d\u9700\u4e0e\u666e\u904d\u7684\u8fd0\u7b97\u6cd5\u5219\u76f8\u9002\u914d<ul> <li>\u53ea\u8981\u7f16\u7801\u6620\u5c04\u5173\u7cfb\u552f\u4e00\u5c31\u662f\u5408\u6cd5\u7f16\u7801</li> </ul> </li> <li>\u4e0e\u4e8c\u8fdb\u5236\u6570\u672c\u8eab\u672a\u5fc5\u6709\u5173\u7cfb</li> </ul> </li> </ul> <p>\u7ed9\u5b9aM\u4e2a\u7b26\u53f7\uff0c\u6c42\u81f3\u5c11\u9700\u8981\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570n:</p> <p>\\(2^n&gt;=M&gt;2^{n-1}\\) so \\(n=\\lceil{log_2{M}}\\rceil\\).  </p> <p>\"one-hot\" code(\u72ec\u70ed\u7f16\u7801):M\u4e2a\u7b26\u53f7\uff0cM\u4e2a\u4e8c\u8fdb\u5236\u4f4d,\u6709\u4e14\u4ec5\u6709\u4e00\u4f4d\u662f1(\u5bf9\u5e94\u72ec\u51b7\uff0c\u53ea\u6709\u4e00\u4f4d\u662f0)</p> <p>(\u4f8b\u5982red_001;green_010;yellow_100)  </p> Extra <p>\u4f7f\u7528\u8fd9\u79cd\u7f16\u7801\u7684\u597d\u5904\u662f\uff0c\u51b3\u5b9a\u6216\u6539\u53d8\u72b6\u6001\u673a\u76ee\u524d\u7684\u72b6\u6001\u7684\u6210\u672c\u76f8\u5bf9\u8f83\u4f4e\uff0c\u5bb9\u6613\u8bbe\u8ba1\u4e5f\u5bb9\u6613\u68c0\u6d4b\u975e\u6cd5\u884c\u4e3a\u7b49\u3002</p> <p>\u4f46\u662f\u76f8\u5bf9\u5e94\u7684\uff0c\u7f3a\u70b9\u662f\u4fe1\u606f\u8868\u793a\u7387\u8f83\u4f4e\uff0c\u975e\u6cd5\u72b6\u6001\u975e\u5e38\u591a\u800c\u6709\u6548\u72b6\u6001\u5f88\u5c11\u3002</p> <p>\u5e38\u89c1\u5bf9\u5341\u8fdb\u5236\u7684\u5341\u4e2a\u6570\u5b57\u8fdb\u884c\u7f16\u7801:  </p> <p>Warning</p> <p>BCD\u7801\u548c\u8fdb\u5236\u8f6c\u6362\u4e0d\u540c</p> <p>13 = D = 1101(\u8fdb\u5236\u8f6c\u5316), \u4f46\u5728\u7f16\u7801\u65f6\u4f1a\u8868\u793a\u6210 0001 0011(BCD\u7801), \u6211\u4eec\u5e94\u8be5\u5206\u522b\u7f16\u7801\u6bcf\u4e2a\u6570\u5b57.   </p>"},{"location":"notes/cs/logic/01/#bcd-codesbinary-code-decimal","title":"BCD Codes(Binary Code Decimal)","text":"<p>\u6709\u6743\u7f16\u7801\uff0c\u6bcf\u4e2a\u7801\u90fd\u6709\u4f4d\u6743</p> <p>\u53ef\u4ee5\u8ba1\u7b97\uff0c\u4f46\u8981\u4fee\u6b63\u3002\uff08\u8d85\u8fc7 9 \u8981\u52a0 6\uff09</p> <p>Example</p> <p> </p> <p>\u4e3a\u4ec0\u4e48\u9700\u8981 BCD \u7f16\u7801</p> <p>\u7535\u5b50\u8868\u4e2d\u6709\u65f6\u9488\u79d2, \u6211\u4eec\u5982\u679c\u7528\u4e8c\u8fdb\u5236\u4fdd\u5b58\u65f6\u9488\u79d2, \u90a3\u4e48 \u52a0\u52309\u4ee5\u4e0a\u5f97\u5230 ABCD..., \u5f53\u6211\u4eec\u60f3\u8981\u663e\u793a\u8fd9\u4e9b\u503c\u65f6, \u6211\u4eec\u8981\u5148\u505a\u8fdb\u5236\u8f6c\u6362, \u518d\u663e\u793a(\u5982 A \u8f6c\u4e3a 10) \u8fd9\u5176\u4e2d\u8981\u505a\u9664\u6cd5, \u6210\u672c\u9ad8. \u4f46\u6211\u4eec\u7528\u4e24\u4f4d BCD \u7801\u8868\u793a, \u5c31\u53ef\u4ee5\u76f4\u63a5\u663e\u793a\u7ed3\u679c\u4e86.  </p>"},{"location":"notes/cs/logic/01/#excess3","title":"Excess3(\u4f59\u4e09\u7801)","text":"<p>8421 + 3 \u5f97\u5230 Excess3 \u7684\u503c. </p> <p>\u7f16\u7801\u6210\u5bf9\u51fa\u73b0, i \u548c 9 - i \u5404\u4f4d\u4e92\u53cd. \u5728\u901a\u4fe1\u65f6\u5f88\u6709\u7528\u5904.  </p> <p>\u201c3\u201d\u6765\u81ea\u4e8eBCD\u7801\u4e2d\u52a0\u6cd5\u4fee\u6b63\u65f6\u7684\\(\\frac{16-10}{2}\\),\u4ece\u800c\u5f88\u597d\u5730\u89e3\u51b3\u4e86BCD\u52a0\u6cd5\u4e2d\u7684\u8fdb\u4f4d\u95ee\u9898</p>"},{"location":"notes/cs/logic/01/#ascii-codes","title":"ASCII Codes","text":"<p>\u5e38\u7528\u7684 ASCII Code:  </p> <ul> <li><code>0</code> &lt;-&gt; \\(30_{16}\\) </li> <li><code>A</code> &lt;-&gt; \\(41_{16}\\) to \\(5A_{16}\\) </li> <li><code>a</code> &lt;-&gt; \\(61_{16}\\) to \\(7A_{16}\\) </li> <li>Delete (DEL) is all bits set.  </li> </ul>"},{"location":"notes/cs/logic/01/#parity-bit-error-detection-codes","title":"Parity Bit Error-Detection Codes(\u5947\u5076\u6821\u9a8c\u4f4d)","text":"<p>\u4fe1\u53f7\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u7531\u4e8e\u5404\u79cd\u539f\u56e0\u51fa\u73b0\u4fe1\u53f7\u6296\u52a8\uff0c\u4e3a\u4fdd\u8bc1\u6570\u636e\u53ef\u4fe1\u5ea6\uff0c\u9700\u8981\u4e00\u4e2a\u9519\u8bef\u68c0\u6d4b\u673a\u5236\u3002</p> <p>\u4e00\u79cd\u5e38\u89c1\u65b9\u6cd5\u662f \u5197\u4f59\uff0c\u5373\u52a0\u5165\u4e00\u4e9b\u989d\u5916\u7684\u4fe1\u606f\u7528\u6765\u6821\u9a8c</p> <p>\u4e00\u79cd\u505a\u6cd5\u662f\u5f15\u5165 \u5947\u5076\u6821\u9a8c\u4f4d\uff08Parity Bit\uff09. \u5b83\u5206\u4e3a\uff1a</p> <ul> <li>\u5076\u6821\u9a8c\uff1aA code word has even parity if the number of 1\u2019s in the code word is even.  </li> <li>\u5947\u6821\u9a8c\uff1aA code word has odd parity if the number of 1\u2019s in the code word is odd.</li> </ul> <p>\u6dfb\u52a0\u4e00\u4f4d\uff0c\u8868\u793a\u7f16\u7801\u7684\u5947\u5076\u6027\u3002</p> <p>\u5bf9\u5076\u6821\u9a8c\u6765\u8bf4\uff0c\u5f53<code>1</code>\u7684\u4e2a\u6570\u4e3a\u5076\u6570\u65f6\u6821\u9a8c\u4f4d\u4e3a<code>0</code>.(\u5982<code>0101</code>\u6dfb\u52a0\u4e00\u4f4d<code>0</code>\u6210\u4e3a<code>01010</code>)</p> <p>\u5bf9\u5947\u6821\u9a8c\u6765\u8bf4\uff0c\u5f53<code>1</code>\u7684\u4e2a\u6570\u4e3a\u5947\u6570\u65f6\u6821\u9a8c\u4f4d\u4e3a<code>0</code>(\u5982<code>1101</code>\u6dfb\u52a0\u4e00\u4f4d<code>1</code>\u6210\u4e3a<code>11011</code>)</p> <p>\u6b64\u65f6\u82e5\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u95ee\u9898\uff0c<code>1</code>\u7684\u6570\u91cf\u5f88\u53ef\u80fd\u53d8\u6210\u5947\u6570\uff0c\u4ece\u800c\u5f97\u77e5\u6b64\u4fe1\u606f\u4e0d\u5bf9\u3002</p>"},{"location":"notes/cs/logic/01/#gray-codes","title":"Gray Codes","text":"<p>\u5e94\u7528: \u5149\u5b66\u4f20\u611f\u5668</p> <p>\u7f16\u7801\u5668\u76d8\u5305\u542b\u4e0d\u900f\u660e\u533a\u57df\u548c\u900f\u660e\u533a\u57df\u3002 Opaque\u8868\u793a0 ,clear\u8868\u793a1\u3002\u5149\u901a\u8fc7\u7f16\u7801\u5668\u7684\u6bcf\u4e00\u4e2a\u73af\uff0c\u4e0e\u7f16\u7801\u7684\u4e00\u4e2a\u4f4d\u76f8\u5bf9\u5e94\uff0c\u7167\u5c04\u5728\u4f20\u611f\u5668\u4e0a\uff0c\u4ea7\u751f\u4e00\u4e2a0\u62161 </p> <p>\u89d2\u7f16\u7801\u5668, \u6d4b\u91cf\u8f6c\u8f74\u8f6c\u5411\u7684\u89d2\u5ea6. \u4e09\u4e2a\u4f20\u611f\u5668\u4e0d\u4f1a\u5728\u540c\u4e00\u6761\u76f4\u7ebf(\u5b89\u88c5\u8bef\u5dee), \u5b58\u5728\u4e2d\u95f4\u72b6\u51b5. \u4f46\u683c\u96f7\u7f16\u7801\u76d8, \u76f8\u90bb\u7f16\u7801\u53ea\u5dee\u4e00\u4f4d, \u5bf9\u7ed3\u679c\u4e0d\u4f1a\u5e26\u6765\u5f71\u54cd.  </p> <p>\u4f8b\u5982\u4e8c\u8fdb\u5236\u7f16\u7801 011 \u8f6c\u6362\u5230 100 \uff0c\u8fd8\u6709\u53ef\u80fd\u51fa\u73b0\u4e2d\u95f4\u72b6\u6001 000, 001, 010, 110, 101, 111; \u4f46\u683c\u96f7\u7f16\u7801\u53ea\u4f1a\u662f011\u6216100\u3002</p> Extra <p>\u683c\u96f7\u7801\u7684\u4e00\u79cd\u7b80\u5355\u7c97\u66b4\u7684\u5199\u6cd5\uff0c\u662f\u901a\u8fc7\u300c\u955c\u50cf\u300d\u7684\u6280\u5de7\u6765\u500d\u589e\u5df2\u77e5\u7684\u683c\u96f7\u7f16\u7801\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u73b0\u5728\u67090 - 3\u7684\u683c\u96f7\u7801\uff0c\u5206\u522b\u662f 00\uff0c01\uff0c11\uff0c10\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u589e\u6dfb\u4e00\u4f4d\u524d\u5bfc 0\uff0c\u7136\u540e\u955c\u9762\u5bf9\u79f0\u5730\u4e66\u5199\u51fa\u5e26\u6709\u524d\u5bfc 1 \u76844 - 7\u7684\u683c\u96f7\u7801\u3002</p> <p>\u6700\u7ec8\u6211\u4eec\u5f97\u5230\u76840 - 7\u7684\u683c\u96f7\u7801\u662f\uff1a000\uff0c001\uff0c011\uff0c010\uff0c110\uff0c111\uff0c101\uff0c100</p> <p></p>"},{"location":"notes/cs/logic/01/#unicode","title":"Unicode","text":"<p>Unicode extends ASCII to 65536(ASCII \u6700\u591a\u53ea\u6709 7 \u4e2a\u4e8c\u8fdb\u5236\u4f4d, \u540e\u6269\u5c55\u4e3a 8 \u4e2a)</p> <ul> <li>2 bytes(16 bits) code words  </li> <li>\u53ef\u4ee5\u7528\u6765\u7f16\u7801\u4e2d\u6587/\u97e9\u6587...\u7b49\u5b57\u7b26(ASCII \u53ea\u80fd\u5904\u7406\u82f1\u6587\u5b57\u6bcd)</li> </ul>"},{"location":"notes/cs/logic/02/","title":"Combinational Logic Circuits","text":"Abstract <ol> <li> <p>\u5e03\u5c14\u4ee3\u6570(Boolean)\u7684\u6982\u5ff5 Boolean Algebra   </p> <ul> <li>\u53d8\u91cf\u4e0e\u771f\u503c\u7684\u5173\u7cfb Binary Variables  </li> <li>\u4e8c\u503c\u903b\u8f91\u548c\u95e8 Binary Logic and Gates</li> <li>\u4e09\u79cd\u57fa\u672c\u8fd0\u7b97 Three basic logic operations</li> </ul> </li> <li> <p>\u57fa\u672c\u8fd0\u7b97\u6cd5\u5219\u4e0e\u7535\u8def\u7b26\u53f7 Operation Definitions and Logic Gate Symbols</p> </li> <li>\u57fa\u672c\u8fd0\u7b97\u516c\u5f0f\u3001\u89c4\u5219\u3001\u53cd\u6f14\uff0c\u5bf9\u5076\u89c4\u5219 basic identities, DeMorgan\u2019s Theorem, Dual Theorem</li> <li>\u57fa\u672c\u903b\u8f91\u7535\u8def\u4e0e\u5176\u903b\u8f91\u7279\u6027\u3002\u4e0e\uff0c\u6216\u7684\u5f00\u3001\u5173\u95e8\u7279\u70b9\uff0c\u5f02\u6216\u7684\u540c\u76f8\u3001\u53cd\u76f8\u6027\u8d28   Logic Gates and implementation, AND, OR gates used to control gate open or close,  XOR gates used as a controllable invertor</li> <li> <p>\u903b\u8f91\u51fd\u6570\u7684\u5316\u7b80 Simplification</p> <ul> <li>\u5316\u7b80\u7684\u6807\u51c6\u3001\u516c\u5f0f\u5316\u5316\u7b80\u3001\u6700\u5c0f\u9879\uff0c\u6700\u5927\u9879\u53ca\u5176\u76f8\u4e92\u5173\u7cfb\u3001\u5361\u8bfa\u56fe\u5316\u7b80\u3001\u8d28\u8574\u6db5\u9879\u3001\u5fc5\u8981\u8d28\u8574\u6db5\u9879\uff0c\u95e8\u8f93\u5165\u6210\u672c Boolean Algebraic Proof, Boolean Function Optimization, Canonical Forms,  Minterms, Maxterms and their relationship, K-map simplification, Prime  Implicants, Gate input Cotes</li> <li>\u542b\u4efb\u610f\u9879\u51fd\u6570\u5316\u7b80 Don't Cares in K-Maps</li> </ul> </li> <li> <p>\u4e0d\u540c\u51fd\u6570\u5f62\u5f0f\u7684\u53d8\u6362\u53ca\u4e0e\u6700\u5c0f\u9879\u7684\u5173\u7cfb   SOM form, POM form, Standard forms, SOP form, POS form, Conversion between  forms</p> </li> <li>\u51fd\u6570\u7684\u4e94\u79cd\u8868\u793a\u5f62\u5f0f\uff1a\u771f\u503c\u8868\u3001\u903b\u8f91\u89e3\u6790\u5f0f\u3001\u6ce2\u5f62\u56fe\u3001\u5361\u8bfa\u56fe\u3001\u903b\u8f91\u7535\u8def\u56fe Truth Table, Boolean Equations, Wave form, K-map, Logic Diagram</li> <li>\u9ad8\u963b\u8f93\u51fa(\u4e09\u6001\u95e8) Hi-Impedance Outputs, Three state buffer</li> </ol>"},{"location":"notes/cs/logic/02/#gate-circuits-and-boolen-equations","title":"Gate Circuits and Boolen Equations","text":""},{"location":"notes/cs/logic/02/#binary-logic-and-gates","title":"Binary Logic and Gates","text":""},{"location":"notes/cs/logic/02/#binary-logic","title":"Binary Logic","text":"<p>\u903b\u8f91\u8fd0\u7b97\u7684\u5bf9\u8c61\u662f\u5e03\u5c14\u53d8\u91cf </p> <p>e.g. True/False, On/Off, Yes/No, 1/0, g\u9ad8\u7535\u538b/\u4f4e\u7535\u538b</p> <p>\u4e3b\u8981\u8fd0\u7b97\u5982\u4e0b\uff1a </p> <ul> <li><code>A AND B</code> denoted by \\(A\\cdot B\\)\u6216\u8005\\(AB\\) </li> <li><code>A OR B</code> denoted by \\(A + B\\)</li> <li><code>NOT A</code> denoted by \\(\\overline{A}\\) or $ \\sim{A}$  </li> <li><code>A NOR B</code> denoted by \\(\\overline{A+B}\\)</li> <li><code>A NAND B</code> denoted by \\(\\overline{A\\cdot B}\\)</li> </ul> <p>\u903b\u8f91\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0:   </p>"},{"location":"notes/cs/logic/02/#logical-gates","title":"Logical Gates\uff08\u903b\u8f91\u95e8\uff09","text":"<p>\u786c\u4ef6\u5c42\u9762\u4e0a\u5b9e\u73b0\u5e03\u5c14\u4ee3\u6570\u7684\u903b\u8f91\u5355\u5143\u3002\u5176\u64cd\u4f5c\u5bf9\u8c61\u4e3a\u9ad8\u4f4e\u7535\u5e73</p> <p></p> <p>(a)\u662f\u4e09\u79cd\u5e38\u7528\u903b\u8f91\u95e8\u7684\u7b26\u53f7\uff0c(b)\u4e3a\u4e09\u8005\u5728 \u65f6\u5e8f\u56fe (timing diagram)\u4e2d\u7684\u72b6\u6001\uff0c(c)\u4e3a\u5728\u5ef6\u65f6\u6548\u5e94\u4e0b\u7684\u65f6\u5e8f\u56fe</p> gate delay <p> \u7531\u4e8e\u7269\u7406\u5c42\u9762\u7684\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u95e8\u7535\u8def\u5728\u6539\u53d8\u8f93\u5165\u540e\uff0c\u8f93\u51fa\u7684\u6539\u53d8\u90fd\u4f1a\u6709\u4e00\u5b9a\u7684\u5ef6\u8fdf In actual physical gates, if one or more input changes causes the output to change, the output change does not occur instantaneously.   The delay between an input change(s) and the resulting output change is the gate delay denoted by tG.  \u5f88\u591a\u65f6\u5019\u6211\u4eec\u4f1a\u505a tradeoff, \u4f7f\u7528\u66f4\u6602\u8d35\u7684\u5668\u6750\u6765\u83b7\u5f97\u66f4\u5c0f\u7684 delay.  </p> <p>\u53e6\uff1a\u975e\u95e8\u66f4\u591a\u88ab\u79f0\u4e3a inverter \u800c\u4e0d\u662f NOT</p> <p>MOS\u7ba1 </p> <ul> <li>N-type  </li> </ul> <p></p> <p>\u7b49\u6548\u4e8e\u5e38\u5f00\u5f00\u5173</p> <ul> <li>P-type  </li> </ul> <p> </p> <p>\u7b49\u6548\u4e8e\u5e38\u95ed\u5f00\u5173</p> <p>\u4e0b\u9762\u662f\u6216\u975e\u95e8\u3001\u4e0e\u975e\u95e8\u548c\u975e\u95e8\uff1a</p> <p> </p> <p>\u901a\u7528\u95e8(Universal Gate):\u529f\u80fd\u5b8c\u5168\u7684\uff0c\u80fd\u591f\u8868\u793a\u5176\u4ed6\u6240\u6709\u95e8\u7684\u903b\u8f91\u95e8\u3002\u53ea\u6709NAND\u548cNOR\u662f\u901a\u7528\u95e8   </p> <p>Question</p> <ul> <li>\u80fd\u4e0d\u80fd\u628a\u4e24\u4e2a\u903b\u8f91\u95e8\u7684\u8f93\u51fa\u63a5\u5728\u4e00\u8d77?(\u5982 NAND \u548c NOT \u7684\u8f93\u51fa)?  -&gt; \u53ef\u80fd\u4e00\u4e2a\u8f93\u51fa\u662f 1, \u4e00\u4e2a\u8f93\u51fa\u662f 0. \u77ed\u8def, \u82af\u7247\u70e7\u6389, \u5192\u70df.  </li> <li>\u80fd\u4e0d\u80fd\u628a NOT \u95e8\u4e2d\u53d8\u4e3a X \u548c Y \u4e24\u4e2a\u8f93\u5165\u5206\u522b\u5bf9\u5e94 CMOS \u548c NMOS? -&gt;\u4e0d\u80fd. \u5f53 X,Y=1,0 \u65f6\u4e0a\u4e0b\u90fd\u63a5\u901a, \u77ed\u8def. \u5f53 X,Y=0,1 \u65f6\u8f93\u51fa\u89d2\u5904\u4e8e HZ(\u9ad8\u963b\u6001).  \u4e09\u6001\u95e8\u5141\u8bb8\u5668\u4ef6\u8f93\u51fa\u8fd9\u6837\u7684\u7ed3\u679c.  </li> </ul> <p>Note</p> <p>\u53ea\u6709\u771f\u503c\u8868\u662f\u552f\u4e00, \u786e\u5b9a\u7684. \u4f46\u516c\u5f0f, \u539f\u7406\u56fe\u53ef\u4ee5\u6709\u591a\u79cd\u5f62\u5f0f.  </p>"},{"location":"notes/cs/logic/02/#boolen-algebra","title":"Boolen Algebra","text":"<p>(\u5de6\u53f3\u516c\u5f0f\u662f\u5bf9\u5076\u7684)</p> <p>precedence: parentheses &gt; NOT &gt; AND &gt; OR   </p> <p>The dual of an algebraic expression is obtained by interchanging + and \u00b7 and interchanging 0\u2019s and 1\u2019s.  \u5bf9\u5076\u5f0f\u53ef\u4ee5\u7528\u4e8e\u51fd\u6570\u5316\u7b80. \u6ce8: \u975e\u4e0d\u53d8! self-dual: the dual expression = the original expression.  </p> Boolean Algebraic Proofs 1 <p>AB + A'C + BC = AB + A'C (Consensus Theorem) Justification 1:            1 . X = X Justification 2:            X + X\u2019 = 1 \u539f\u5f0f = AB + A\u2019C + ABC + A\u2019BC  X(Y + Z) = XY + XZ (Distributive Law)  = AB + ABC + A\u2019C + A\u2019BC     X + Y = Y + X (Commutative Law) = AB . 1 + ABC + A\u2019C . 1 + A\u2019C . B X . 1 = X, X . Y = Y  . X (Commutative Law) = AB (1 + C) + A\u2019C (1 + B)  X(Y + Z) = XY +XZ (Distributive Law) = AB . 1 + A\u2019C . 1 = AB + A\u2019C   X . 1 = X     \u6700\u597d\u5c06\u6bcf\u4e00\u6b65\u7528\u7684\u516c\u5f0f\u5199\u51fa\u6765    </p> Boolean Algebraic Proofs 2 <p>(X+Y)'Z + XY' = Y'(X+Z) \u539f\u5f0f = X\u2019 Y\u2019 Z + X Y\u2019 (A + B)\u2019 = A\u2019 . B\u2019 (DeMorgan\u2019s Law) = Y\u2019 X\u2019 Z + Y\u2019 X A . B = B . A (Commutative Law) = Y\u2019 (X\u2019 Z + X)  A(B + C) = AB + AC (Distributive Law) = Y\u2019 (X\u2019 + X)(Z + X) A + BC = (A + B)(A + C) (Distributive Law) = Y\u2019 . 1 . (Z + X)        A + A\u2019 = 1 = Y\u2019 (X + Z)        1 . A = A, A + B = B + A (Commutative Law) \u7559\u610f\u5b9a\u7406 15</p> Boolean Algebraic Proofs 3 <p> </p> <p>Complementing Functions Use Demorgan's Theroem  </p> <ul> <li>interchange AND and OR operators.  </li> <li>complement each constant value and literal.  </li> </ul> <p>Note</p> <p>\u5bf9\u6bd4\u53cd\u51fd\u6570\u548c\u5bf9\u5076\u51fd\u6570.  </p>"},{"location":"notes/cs/logic/02/#canonical-forms","title":"Canonical Forms","text":"<p>\u4efb\u4f55\u903b\u8f91\u51fd\u6570, \u53ef\u4ee5\u5199\u4e3a Sum of Minterms(SOM) or Product of Maxterms(POM).   </p>"},{"location":"notes/cs/logic/02/#maxterm-and-minterm","title":"Maxterm and Minterm","text":"<ul> <li> <p>Minterms  Minterms are AND terms with each variable present in either true or complemented form.(\u6bcf\u4e2a\u53d8\u91cf\u90fd\u4f1a\u51fa\u73b0\u4e14\u53ea\u51fa\u73b0\u4e00\u6b21) n variables -&gt; \\(2^n\\) minterms  </p> </li> <li> <p>Maxterms Maxterms are OR terms with each variable present in either true or complemented form.(\u6bcf\u4e2a\u53d8\u91cf\u90fd\u4f1a\u51fa\u73b0\u4e14\u53ea\u51fa\u73b0\u4e00\u6b21) n variables -&gt; \\(2^n\\) maxterms   </p> </li> </ul> <p>Example</p> Index Minterm Maxterm 0 \\(\\overline x\\ \\overline y\\) \\(x+y\\) 1 \\(\\overline x\\ y\\) \\(x+\\overline y\\) 2 \\(x\\ \\overline y\\) \\(\\overline x+y\\) 3 \\(x\\ y\\) \\(\\overline x+\\overline y\\) <p>The index is important for describing which variables in the terms are true and which are complemented. index \u5c31\u662f\u5bf9\u5e94\u4f7f\u5f97 minterm = 1 \u7684\u552f\u4e00\u7684\u53d6\u503c. e.g. index = 1 means only when x = 0, y = 1 then \\(\\overline{x} y = 1\\) maxterm \u4e0e minterm \u5bf9\u5076, \u6240\u4ee5 index \u662f\u4f7f\u5f97 maxterm = 0 \u7684\u552f\u4e00\u7684\u53d6\u503c. \u5982 index = 1, \u5219 minterm \u91cc\u5bf9\u5e94\u7684\u5b57\u6bcd\u5e94\u4e3a\u539f\u53d8\u91cf, maxterm \u91cc\u7684\u5b57\u6bcd\u5e94\u4e3a\u53cd\u53d8\u91cf. Note that the Standard Order of variables: usually alphabetically.  </p> <p>We find that \\(m_i = \\overline{M_i}\\).   </p> <ul> <li> <p>We can implement any function by \"ORing\" the minterms corresponding to \"1\" entries in the function table. These are called the minterms of the function.   </p> <p>Minterm Function Example</p> <p>  it can also be written as \\(\\sum m(1,4,7) = \\sum(1,4,7)\\). </p> <ul> <li>We can implement any function by \"ANDing\" the maxterms corresponding to \"0\" entries in the function table. These are called the maxterms of the function.   </li> </ul> <p>Maxterm Function Example</p> <p>   it can also be written as \\(\\prod M(0, 2, 3, 5, 7) = \\prod(0, 2, 3, 5, 7)\\)</p> </li> </ul>"},{"location":"notes/cs/logic/02/#canonical-forms_1","title":"Canonical Forms","text":"<ul> <li> <p>Canonical Sum of Minterms  Boolen function -&gt; Sum of Minterms: expand all terms first to explicitly list all minterms. Do this by \"ANDing\" any term missing a variable v with a term \\((v+\\overline{v})\\).   </p> <p>\\(F=A+\\overline{B} C\\)</p> <p>F = A(B + B\u2019)(C + C\u2019) + (A + A\u2019) B\u2019 C  = ABC + ABC\u2019 + AB\u2019C + AB\u2019C\u2019 + AB\u2019C + A\u2019B\u2019C = ABC + ABC\u2019 + AB\u2019C + AB\u2019C\u2019 + A\u2019B\u2019C = m7 + m6 + m5 + m4 + m1 = m1 + m4 + m5 + m6 + m7   </p> </li> <li> <p>Canonical Product of Maxterms The method for Maxterms is similar, just \"ORing\" terms missing variables v with a term equal \\(v\\cdot \\overline{v}\\) then applying the distributive law.  </p> <p>\\(f(A,B,C)=A\\overline C + BC+\\overline A \\overline B\\)</p> <p> </p> </li> </ul> <p>Function Complements The complement of a function expressed as a sum of minterms is constructed by selecting the minterms missing in the sum-of-minterms canonical forms.  \u6bcf\u4e00\u4e2a minterm \u8981\u4e48\u5728\u51fd\u6570\u91cc, \u8981\u4e48\u5728\u5176\u53cd\u51fd\u6570\u91cc. \u6c42\u51fd\u6570\u7684\u53cd\u51fd\u6570, \u53ea\u9700\u8981\u6240\u6709minterms \u53bb\u6389\u539f\u51fd\u6570\u4e2d\u5b58\u5728\u7684 minterms \u5373\u53ef.  </p> <p>e.g. \\(F(x,y,z)=\\sum_m(1,3,5,7)\\) then \\(\\overline F(x,y,z) = \\sum_m(0,2,4,6)\\) It also can be writed as \\(\\overline F= \\overline m_1 \\cdot \\overline m_3 \\cdot \\overline m_5 \\cdot \\overline m_7 = M_1 \\cdot M_3 \\cdot M_5 \\cdot M_7=\\prod _M(1,3,5,7)\\) </p> <p>Conversion between Forms</p> <p>Idea: \\(F=\\sum_m m_i\\) while \\(\\overline{F} = \\sum_M M_i\\) Maxterms \u7684\u6c42\u6cd5\u4e0d\u662f\u5f88\u81ea\u7136, \u4e00\u822c\u5148\u6c42\u53cd\u51fd\u6570\u7684 Minterms \u518d\u5c06\u4ed6\u4eec\u53d6\u53cd\u8f6c\u4e3a Minterms.    </p> <ul> <li>Find the function complement by swapping terms in the list with terms not in the list.  </li> <li>Change from products to sums, or vice versa.  </li> </ul> <p>\u5982\u4e0a\u6587\u7684\u4f8b\u5b50\u4e2d  \\(F(x,y,z)=\\sum_m(1,3,5,7), \\overline{F}=\\sum_m(0,2,4,6)\\) \u6545 \\(F = \\prod_M(0,2,4,6)\\)</p> <p>Standard Forms </p> <ul> <li>Standard Sum-of-Products (SOP) form: equations are written as an OR of AND terms.  </li> <li>Standard Product-of-Sums (POS) form: equations are written as an AND of OR terms</li> </ul> <p>SOP and POS are two-level network of gates.  </p> <ul> <li> <p>SOP </p> <ul> <li>The first level consists of n-input AND gates  </li> <li>The second level is a single OR gate (with fewer than \\(2^n\\) inputs)</li> </ul> </li> </ul> <p>Info</p> <p>Standard Forms \u7528\u6765\u505a\u7535\u8def\u5b9e\u73b0, \u4e00\u822c\u4f1a\u8fdb\u884c SOM POM \u5316\u7b80, \u4f46\u4f1a\u7701\u7565\u4e00\u4e9b\u4e1c\u897f. \u4f9d\u7136\u6309\u7167 Standard Order, \u4f46\u6bcf\u4e00\u9879\u4e2d\u4e0d\u4e00\u5b9a\u9700\u8981\u6240\u6709\u53d8\u91cf. SOP POS \u4e5f\u88ab\u79f0\u4e3a\u4e24\u6781\u51fd\u6570. \u5982 SOP: \\(ABD+\\overline A \\overline B C +B\\), POS: \\((A+B)\\cdot  (A+\\overline B+\\overline C)\\cdot  C\\) \u4ed6\u4eec\u8def\u5f84\u4e0a\u6700\u591a\u53ea\u9700\u8981\u7ecf\u8fc7\u4e24\u4e2a\u7535\u8def\u95e8, \u8fd9\u79f0\u4e3a\u4e8c\u7ea7\u7535\u8def. \u53cd\u89c2 \\((AB+C)(A+C), AB\\overline C+AC(A+B)\\) \u6700\u591a\u5c31\u9700\u8981\u7ecf\u8fc7\u4e09\u4e2a\u7535\u8def\u95e8.</p> <ul> <li>\u4e3a\u4ec0\u4e48\u9700\u8981\u964d\u4f4e\u7535\u8def\u95e8\u7684\u7ea7\u6570?  \u7535\u8def\u95e8\u6709\u5ef6\u8fdf, \u7ecf\u8fc7\u7684\u7535\u8def\u95e8\u8d8a\u591a\u5ef6\u8fdf\u8d8a\u5927, \u610f\u5473\u7740\u6700\u540e\u7535\u8def\u505a\u51fa\u6765\u7684\u8ba1\u7b97\u673a\u4e0d\u6613\u63d0\u9ad8\u529f\u7387.  </li> </ul> <p>\\(F = \\overline A\\overline  B C + A \\overline B\\overline  C + A\\overline  B C + AB\\overline C + ABC\\)</p> <p>F = A\u2019 B\u2019 C + A (B\u2019 C\u2019 + B C\u2019 + B\u2019 C + B C)   = A\u2019 B\u2019 C + A (B\u2019 + B) (C\u2019 + C)   = A\u2019 B\u2019 C + A.1.1   = A\u2019 B\u2019 C + A    = B\u2019C + A</p>"},{"location":"notes/cs/logic/02/#circuit-optimization","title":"Circuit Optimization","text":"<p>Goal: To obtain the simplest implementation for a given function.  </p> <p>Distinct cost criteria we will use:  </p> <ul> <li>Literal cost (L)</li> <li>Gate input cost (G)</li> <li>Gate input cost with NOTs (GN)</li> </ul>"},{"location":"notes/cs/logic/02/#two-level-optimization","title":"Two-Level Optimization","text":""},{"location":"notes/cs/logic/02/#literal-cost","title":"Literal Cost","text":"<p>literal is a variable or its complement literal cost is the number of literal appearances in a Boolean expression corresponding to the logic circuit diagram.  </p> <p>e.g. </p> <ul> <li>\\(F=BD+A\\overline BC+ A\\overline C\\overline D\\) its L=8  </li> <li>\\(F=BD+A\\overline BC+ A\\overline B\\overline D + AB\\overline C\\) its L=11  </li> </ul>"},{"location":"notes/cs/logic/02/#gate-input-cost","title":"Gate Input Cost","text":"<p>Gate input costs is the number of inputs to the gates in the implementation corresponding exactly to the given equation or equations. (G - inverters not counted, GN - inverters counted)   </p> <p>For SOP and POS equations: </p> <ul> <li>all literal appearances(L)  </li> <li>the number of terms excluding single literal terms, (G). e.g. for A+BC its L=3 while G=1</li> <li>optionally, the number of distinct complemented single literals(GN).</li> </ul> <p>e.g. </p> <ul> <li>\\(F=BD +A\\overline BC+A\\overline C\\overline D\\)  G=8(L)+3=11, GN=11+3=14.   </li> <li>\\(F=BD+A\\overline BC+A\\overline B\\overline D+AB\\overline C\\) G=11+4=15, GN=15+3(only BCD)=18.  </li> </ul> <p>Cost Criteria</p> <p> </p> <p>When do we stop trying to reduce the cost?   Do we know when we have a minimum cost?  </p>"},{"location":"notes/cs/logic/02/#map-manipulation","title":"Map Manipulation","text":"<p>Karnaugh maps(K-map) </p> <ul> <li>A K-map is a collection of squares Each square represents a minterm</li> <li>The collection of squares is a graphical representation of a Boolean function</li> <li>Adjacent squares differ in the value of one variable</li> <li>Alternative algebraic expressions for the same function are derived by recognizing patterns of squares</li> </ul> <p>The K-map can be viewed as</p> <ul> <li>A reorganized version of the truth table</li> <li>A topologically-warped Venn diagram as used to visualize sets in algebra of sets</li> </ul>"},{"location":"notes/cs/logic/02/#two-variable-maps","title":"Two-Variable Maps","text":"<p>Example</p> F=x+y y=0 y=1 x=0 0 1 x=1 1 1 <p>For function F(x,y), the two adjacent cells containing 1\u2019s can be combined using the Minimization Theorem: \\(F(x,y)=(x \\ \\overline y + x\\ y ) + (x\\ y + \\overline x \\ y) = x + y\\)</p>"},{"location":"notes/cs/logic/02/#three-variable-maps","title":"Three-Variable Maps","text":"<p>Note</p> <p>\u6ce8\u610f\u5217, \u8981\u6309\u7167Gray codes\u7684\u987a\u5e8f\u6392\u5217, \u5373\u76f8\u90bb\u4e24\u5217\u53ea\u76f8\u5dee\u4e00\u4f4d.  \u56e0\u6b64\u5217\u6807\u53f7\u4e3a  00 01 11 10. \u76f8\u90bb\u4e24\u4e2a\u5c0f\u65b9\u683c\u90fd\u53ea\u6709\u4e00\u4e2a\u53d8\u91cf\u4e0d\u540c. \u53ef\u4ee5\u5377\u8d77\u6765, \u5373\u6700\u5de6\u8fb9\u4e00\u5217\u548c\u6700\u53f3\u8fb9\u4e00\u5217</p> <p>Alternatie Map Labeling </p> <p>Example</p> <p> </p> <ul> <li>\u6ce8\u610f\u5230 3 2 \u683c\u90fd\u662f 1, \u56e0\u6b64 \\(\\bar xy\\bar z + \\bar x y z = \\bar xy\\), \u6ca1\u6709\u53d8\u5316\u7684\u53d8\u91cf\u53ef\u4ee5\u4fdd\u7559, \u53d8\u5316\u4e86\u7684\u53d8\u91cf\u53ef\u4ee5\u6d88\u6389. \u540c\u7406 4 5 \u683c\u53ef\u5316\u4e3a \\(x \\bar y\\) </li> <li>3 7 \u683c: \\(yz\\); 6 7\u683c: \\(x y\\); 4 6 \u683c\\(: x\\bar z\\)</li> </ul> <p>Combining Squares</p> <p>\u53ef\u4ee5\u753b \\(2^n\\) \u5927\u5c0f\u7684\u65b9\u5f62\u683c(\u5373\u4e00\u6b21\u8981\u5305\u62ec \\(2^n\\) \u4e2a\u5c0f\u65b9\u683c) For 3-variable K-Map:  </p> <ul> <li>One square represents a minterm with three variables  </li> <li>Two adjacent squares represent a product term with two variables  </li> <li>Four \u201cadjacent\u201d terms represent a product term with one variable  </li> <li>Eight \u201cadjacent\u201d terms is the function of all ones (no variables) = 1.  </li> </ul> <p>Example</p> <p> </p> <p>Warning</p> <ul> <li>\u683c\u96f7\u7801!  </li> <li>\u4e24\u4fa7\u53ef\u4ee5\u5377\u8d77\u6765 </li> </ul> <p>\u5316\u7b80\u601d\u8def: \u7528\u6700\u5927\u7684\u6700\u5c11\u7684\u5708\u628a\u6240\u6709\u7684 1 \u5708\u5b8c.(\u5708\u4e0e\u5708\u4e4b\u95f4\u53ef\u4ee5\u6709\u4ea4\u53c9) \u4e00\u5b9a\u662f SOP</p> <p>Example</p> <p> </p>"},{"location":"notes/cs/logic/02/#four-variable-maps","title":"Four Variable Maps","text":"<p>Note</p> <p>\u6ce8\u610f\u56db\u4e2a\u89d2\u4e5f\u53ef\u4ee5\u5377(0 2 8 10 -&gt; \\(\\overline X \\ \\overline Z\\))</p> <p>Example</p> <p>   F = XZ + X'Z' \u5316\u7b80\u7ed3\u679c\u4e0d\u552f\u4e00</p>"},{"location":"notes/cs/logic/02/#dont-cares-in-k-maps","title":"Don't Cares(\u65e0\u5173\u9879) in K-Maps","text":"<p>By placing \u201cdon't cares\u201d (an \u201cx\u201d entry) in the function table or map, the cost of the logic circuit may be lowered. \u5982\u6211\u4eec\u628a BCD \u7801\u4f5c\u4e3a\u8f93\u5165, \u6709\u6548\u6570\u5b57 0 - 9, \u5982\u679c\u90a3\u4e48 9 \u4ee5\u4e0a\u7684\u8f93\u5165\u7ec4\u5408\u6211\u4eec\u4e0d\u5728\u4e4e\u8f93\u51fa\u7ed3\u679c, \u79f0\u4e3a\u65e0\u5173\u9879, \u5728\u5361\u8bfa\u56fe\u4e0a\u753b x.    </p> <p>BCD 5 or More</p> <p> X \u53ef\u5708\u53ef\u4e0d\u5708!  </p> <p>Example</p> <p>Find the optimum POS solution: \\(F(A,B,C,D)=\\sum\\limits_m(3,9,11,12,13,14,15)+\\sum d(1,4,6)\\) Hint: Use \\(\\overline F\\) and complement it to get the result. ans: F' = B' D' + A' B   (\u6c42 F' \u65f6\u5728\u5361\u8bfa\u56fe\u4e2d\u5708\u7a7a\u683c\uff0c\u800c\u4e0d\u662f 1) F = (B + D)(A + B')  </p>"},{"location":"notes/cs/logic/02/#systematic-simplification","title":"Systematic Simplification","text":"<ul> <li>A Prime Implicant(\u8d28\u8574\u542b\u9879) is a product term obtained by combining the maximum possible number of adjacent squares in the map into a rectangle with the number of squares a power of 2.  </li> <li>A prime implicant is called an Essential Prime Implicant(\u5fc5\u8981\u8d28\u8574\u6db5\u9879) if it is the only prime implicant that covers (includes) one or more minterms.  </li> </ul> <p>\u8d28\u8574\u6db5\u9879\u662f\u5bf9\u67d0\u4e2a \"1\" \u800c\u8a00\u5305\u62ec\u5b83\u7684\u6700\u5927\u65b9\u5f62\u3002\u5bf9\u67d0\u4e2a \"1\" \u800c\u8a00\u5982\u679c\u5b83\u7684\u8d28\u8574\u6db5\u9879\u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u4e48\u5b83\u662f\u5fc5\u8981\u7684\u3002</p> <ol> <li>Find All Prime Implicants</li> <li>Find Essential ones</li> <li>\u5904\u7406\u5269\u4e0b\u7684 1 </li> </ol> <p>Example</p> <p>  \u54ea\u4e9b 1 \u53ea\u88ab\u4e00\u4e2a\u8d28\u8574\u542b\u5708\u5305\u56f4\uff0c\u90a3\u4e48\u4ed6\u4e00\u5b9a\u662f\u5fc5\u8981\u8d28\u8574\u6db5\u9879 </p> <p>Example</p> <p>Find all prime implicants for: \\(G(A,B,C,D)=\\sum\\limits_m(0,2,3,4,7,12,13,14,15)\\) Hint: There are seven prime implicants!  </p> <p>Prime Implicants are AB, B C' D', A' C' D', A' B' D', A' B' C, A' C D, B C D. ony AB Essential.   </p>"},{"location":"notes/cs/logic/02/#multi-level-circuit-optimization","title":"Multi-Level Circuit Optimization","text":"<p>\u4e24\u7ea7\u95e8\u7684\u5ef6\u8fdf\u4f4e\uff0c\u4f46 cost \u9ad8\u3002</p> <p>Transformation Examples</p> <p> </p>"},{"location":"notes/cs/logic/02/#integrated-circuits","title":"Integrated Circuits","text":"<p>\u96c6\u6210\u7535\u8def</p> <ul> <li>Integrated circuit (informally, a \u201cchip\u201d) is a semiconductor crystal (most often silicon) containing the electronic components for the digital gates and storage elements which are interconnected on the chip.   </li> <li> <p>Terminology - Levels of chip integration</p> <ul> <li>SSI (small-scale integrated) - fewer than 10 gates</li> <li>MSI (medium-scale integrated) - 10 to 100 gates</li> <li>LSI (large-scale  integrated) - 100 to  thousands of gates</li> <li>VLSI (very large-scale integrated) - thousands to 100s of millions of gates</li> </ul> </li> <li> <p>Technology Parameters</p> <ul> <li>Fan-in \u6247\u5165\u7cfb\u6570 \u2013 the number of inputs available on a gate \u4e00\u4e2a\u95e8\u7684\u8f93\u5165\u7aef\u7684\u4e0a\u9650 \u7406\u60f3\u60c5\u51b5\u4e00\u4e2a\u95e8\u7684\u8f93\u5165\u53ef\u4ee5\u63a5\u65e0\u6570\u4e2a\u95e8\u7684\u8f93\u5165\uff0c\u4f46\u5b9e\u9645\u4e0a\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u95e8\u7684\u8f93\u5165\u7aef\u90fd\u4f1a\u82b1\u8d39\u4e00\u4e9b\u7535\u6d41\uff0c\u800c\u95e8\u8f93\u51fa\u7684\u7535\u6d41\u662f\u6709\u9650\u7684\uff0c\u4ece\u96c6\u6210\u7535\u8def\u672c\u8eab\u4f1a\u8981\u6c42\u4e00\u4e2a\u95e8\u7684\u8f93\u51fa\u6700\u591a\u80fd\u62c9\u591a\u5c11\u95e8\u7684\u8f93\u5165\u3002</li> <li> <p>Fan-out \u6247\u51fa\u7cfb\u6570 \u2013 the number of standard loads driven by a gate output     \u4e00\u4e2a\u95e8\u7684\u8f93\u51fa\u5e26\u4e86\u5f88\u591a\u95e8\u7684\u8f93\u5165\uff1f\uff08\u50cf\u706b\u8f66\u5934\u5e26\u4e86\u5f88\u591a\u8f66\u53a2\uff09     \u4e00\u4e2a\u95e8\u7684\u8f93\u51fa\u4e0d\u80fd\u63a5\u5230\u592a\u591a\u95e8\u7684\u8f93\u5165\u4e0a\u53bb\uff0c\u4e00\u822c\u4f1a\u7528 buffer \u505a\u7f13\u51b2  </p> <ul> <li>e.g. 1 standard load equals the load contributed by the input of 1 inverter.  </li> <li>Transition time - the time required for the gate output to change from H to L, \\(t_{HL}\\), or from L to H, \\(t_{LH}\\) \u5e26\u7684\u95e8\u8d8a\u591a\uff0c\u4e0a\u5347\u65f6\u95f4\u5c31\u8d8a\u591a\u3002 \u6211\u4eec\u4f1a\u9650\u5236\u8fc7\u6e21\u65f6\u95f4\uff0c\u8bbe\u7f6e maximum fan-out <ul> <li>Logic Levels \u2013 the signal value ranges for 1 and 0 on the inputs and 1 and 0 on the outputs (see Figure 1-1)</li> <li>Noise Margin \u2013 the maximum external noise voltage superimposed on a normal input value that will not cause an undesirable change in the circuit output</li> <li>Cost for a gate - a measure of the contribution by the gate to the cost of the integrated circuit Ignoring the wiring area, the gate area is roughly proportional to the gate input count.  </li> <li>Propagation Delay \u2013 The time required for a change in the value of a signal to propagate from an input to an output</li> <li>Power Dissipation \u2013 the amount of power drawn from the power supply and consumed by the gate</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"notes/cs/logic/02/#propagation-delay","title":"Propagation Delay","text":"<p>Delay is usually measured at the 50% point with respect to the H and L output voltage levels. High-to-low (\\(t_{PHL}\\)) and low-to-high (\\(t_{PLH}\\)) output signal changes may have different propagation delays. \u6ce8\u610f HL/PL \u6307\u7684\u662f\u8f93\u51fa\u7aef\u7684\u65f6\u95f4\u53d8\u5316\u3002</p> <p>Info</p> <p>\u5982\u679c\u8fd9\u91cc\u6709 n \u4e2a\u975e\u95e8\u4e32\u8054  </p> <p>\u8ba1\u7b97 \\(t_{PHL}\\) \u9700\u8981 \\(t_{3PHL} + t_{2PLH} + t_{1PHL}\\) \u4ece\u7ed3\u679c\u5012\u63a8 \u5982\u679c\u53ea\u6c42 \\(t_{pd}\\) \u53ea\u9700\u8981\u628a\u6bcf\u7ea7\u7684 \\(t_{pd}\\) \u76f8\u52a0\u5373\u53ef\u3002</p> <ul> <li> <p>Delay Mode </p> <ul> <li>Transport delay - a change in the output in response to a change on the inputs occurs after a fixed specified delay \u8f93\u51fa\u6574\u4f53\u5f80\u540e\u79fb</li> <li> <p>Inertial delay - similar to transport delay, except that if the input changes such that the output is to change twice in a time interval less than the rejection time, the output changes do not occur. Models typical electronic circuit behavior, namely, rejects narrow \u201cpulses\u201d on the outputs \u9664\u4e86\u8f93\u51fa\u5f80\u540e\u79fb\uff0c\u5728\u60ef\u6027\u5ef6\u8fdf\u4e0b\uff0c\u5f88\u7a84\u7684\u8109\u51b2\uff08\u5c0f\u4e8e rejection time\uff09\u4f1a\u88ab\u6d88\u9664\u6389\u3002    </p> <p>Example</p> <p>  \u84dd\u7ebf\u8868\u660e propagation time, \u9ed1\u7ebf\u8868\u660e rejection time. \u56e0\u6b64 ab de \u8fd9\u4e2a\u8109\u51b2\u88ab\u5403\u6389</p> </li> </ul> </li> <li> <p>Circuit Delay</p> <p>Example</p> <p> </p> <ul> <li>\u6700\u5f00\u59cb S \u7531 0-&gt;1 \u540e 0.9s Y \u4ece 0-&gt;1 </li> <li>S \u4ece 1-&gt;0 \u540e\u4e0b\u65b9\u7684\u4e0e\u95e8 0.4s \u540e\u4f1a\u4ece 1-&gt;0, \u4f46\u4e0a\u65b9\u7684\u4e0e\u95e8 0.6s \u540e\u624d\u4f1a\u4ece 0-&gt;1. \u4f46 0.9s \u540e Y \u624d\u4f1a 1-&gt;0, \u6b64\u540e\u518d\u8fc7 0.2s(\u5171 1.1s) \u540e Y \u4ece 0-&gt; 1. \u8fd9\u91cc Y \u51fa\u73b0\u4e86\u4e00\u4e2a\u5c0f\u5c16\u5cf0\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u7535\u8def\u4ea7\u751f\u7684\u5192\u9669\u3002 S \u7684\u4e24\u6761\u8def\u5f84\u6211\u4eec\u53d1\u73b0\u5ef6\u8fdf\u4e0d\u540c\uff0c\u8fd9\u79cd\u6211\u4eec\u79f0\u4e4b\u4e3a\u7535\u8def\u4e2d\u7684\u7ade\u4e89\u3002</li> </ul> </li> <li> <p>Fan-out and Delay The fan-out loading a gate\u2019s output affects the gate\u2019s propagation delay\u3002 SL(Standard Load): \u4ee5\u975e\u95e8\u4e3a\u6807\u51c6\u3002\u5e26\u4e00\u4e2a\u975e\u95e8\u9700\u8981...\u7684\u8d1f\u8f7d</p> <p>Example</p> <p>One realistic equation for tpd  for a NAND gate with 4 inputs is: \\(t_{pd} = 0.07 + 0.021 SL\\) ns SL is the number of standard loads the gate is driving, i. e., its fan-out in standard loads For SL = 4.5, tpd = 0.165 ns \u7531\u5de5\u827a\u7a0b\u5ea6+\u8d1f\u8f7d\u60c5\u51b5\u51b3\u5b9a  </p> </li> <li> <p>Cost/Performance Tradeoffs  </p> <p>Example</p> <p>NAND gate G with 20 standard loads on its output has a delay of 0.45 ns and has a normalized cost of 2.0. A buffer H has a normalized cost of 1.5. The NAND gate driving the buffer with 20 standard loads gives a total delay of 0.33 ns 1. The cost of this portion of the circuit cannot be more than 2.5 2. The delay of this portion of the circuit cannot be more than 0.40 ns 3. The delay of this portion of the circuit must be less than 0.40 ns and the cost less than 3.0</p> <p>ans: 1. No buffer 2. Use buffer 3. Irrelevant - buffer needed to satisfy delay constraint, but cannot satisfy cost constraint.</p> </li> </ul>"},{"location":"notes/cs/logic/02/#additional-gates-and-circuits","title":"Additional Gates and Circuits","text":""},{"location":"notes/cs/logic/02/#other-gate-types","title":"Other Gate Types","text":"<p>Why?</p> <ul> <li>Implementation feasibility and low cost</li> <li>Power in implementing Boolean functions</li> <li>Convenient conceptual representation</li> </ul> <p>Gate classifications</p> <ul> <li>Primitive gate - a gate that can be described using a single primitive operation type (AND or OR) plus an optional inversion(s).</li> <li>Complex gate - a gate that requires more than one primitive operation type for its description</li> </ul>"},{"location":"notes/cs/logic/02/#primitive-gate","title":"Primitive gate","text":""},{"location":"notes/cs/logic/02/#buffer","title":"Buffer","text":"<p>\u6ca1\u6709\u903b\u8f91\u529f\u80fd\uff0c\u4f46\u6709\u5f88\u5f3a\u7684\u5e26\u8d1f\u8f7d\u7684\u80fd\u529b\uff0c\u80fd\u591f\u62c9\u9ad8\u7535\u5e73\uff0c\u964d\u4f4e\u4f20\u8f93\u5ef6\u8fdf\u3002</p>"},{"location":"notes/cs/logic/02/#nand","title":"NAND","text":"<p>\u4e0e\u975e\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5148\u975e\u540e\u6216 \\(F=\\overline{X} + \\overline{Y} + \\overline{Z}\\) A NAND gate with one input degenerates to an inverter. Universal gate - a gate type that can implement any Boolean function.  \u6700\u9ad8\u6548</p> <p>\u6211\u4eec\u4e00\u822c\u4e0d\u4f7f\u7528\u4e0e\u975e\u95e8\u505a\u903b\u8f91\u8fd0\u7b97\uff0c\u56e0\u4e3a\u4ed6\u4e0d\u6ee1\u8db3\u4ea4\u6362\u3001\u7ed3\u5408\u5f8b\u3002\u4e00\u822c\u5728\u6700\u540e\u628a\u4e0e\u6216\u975e\u8f6c\u4e3a\u7528\u4e0e\u975e\u5b9e\u73b0\u3002</p>"},{"location":"notes/cs/logic/02/#nor","title":"NOR","text":"<p>\u4e5f\u53ef\u4ee5\u5229\u7528 De Morgan \u53d8\u4e3a \u5148\u975e\u540e\u4e0e\uff0c\u5176\u4ed6\u540c\u4e0e\u975e\u3002</p>"},{"location":"notes/cs/logic/02/#complex-gate","title":"Complex gate","text":""},{"location":"notes/cs/logic/02/#exclusive-or-exclusive-nor","title":"Exclusive OR/ Exclusive NOR","text":"<p>eXclusive OR(XOR) and XNORs gate  </p> <ul> <li> <p>Definitions:  </p> <ul> <li>\\(X\\oplus Y = X\\ \\overline Y +\\overline X \\ Y\\) </li> <li>\\(\\overline{X\\oplus Y} = X\\  Y +\\overline X \\ \\overline Y\\) </li> <li>the XNOR function also known as the equivalence function, denoted by the operator '\\(\\equiv\\)'.  </li> <li>\u91cd\u8981\u516c\u5f0f\uff08\u8981\u8bb0\uff09</li> </ul> </li> </ul> (\u7b2c\u4e00\u884c &amp; \u6700\u540e\u4e00\u884c\u5f88\u91cd\u8981) <ul> <li> <p>\u4e25\u683c\u6765\u8bf4\uff0c\u53ea\u6709\u4e24\u53d8\u91cf\u7684\u5f02\u6216\u3002\u5bf9\u4e8e\u591a\u4e8e\u4e24\u4e2a\u8f93\u5165\u7684\uff0c\u6211\u4eec\u7528\u5947\u51fd\u6570/\u5076\u51fd\u6570\u4ee3\u66ff\u3002 \u5bf9\u4e8e\u4e09\u53d8\u91cf\u7684\u5f02\u6216 \\(X\\oplus Y\\oplus Z = \\overline X \\ \\overline Y \\ Z + \\overline X \\ Y \\overline Z + X \\ \\overline Y \\ \\overline Z + X\\ Y\\ Z\\) \u5361\u8bfa\u56fe\u65e0\u6cd5\u518d\u5316\u7b80</p> 1 1 1 1 <p>\u6211\u4eec\u79f0\u5b83\u4e3a\u5947\u51fd\u6570\uff0c\u56e0\u4e3a minterm \u91cc 1 \u7684\u4e2a\u6570(\\(=\\sum m(1(001),2(010),4(100),7(111))\\))\u4e3a\u5947\u6570\u3002\u5176\u53cd\u51fd\u6570\u4e3a\u5076\u51fd\u6570\u3002</p> </li> <li> <p>Symbol \u6ce8\u610f bubble \u6ce1\u6ce1(\u8868\u793a inverter)  </p> </li> </ul> <ul> <li>Implementation  </li> </ul> <p>\u4e0b\u9762\u7684\u5b9e\u73b0\u9700\u8981 \\(4\\times 4=16\\) \u4e2a\u6676\u4f53\u7ba1\u3002\u4f46\u5b9e\u9645\u4e2d\u6700\u7b80\u5355\u53ea\u9700\u8981 10 \u4e2a\u6676\u4f53\u7ba1\uff0c\u5c31\u53ef\u4ee5\u6784\u9020\u51fa XOR \u95e8\u3002</p>"},{"location":"notes/cs/logic/02/#odd-and-even-functions","title":"Odd and Even Functions","text":"<ul> <li>The 1s of an odd function correspond to minterms having an index with an odd number of 1s.  </li> <li>The 1s of an even function correspond to minterms having an index with an even number of 1s.  </li> </ul> <p>Example</p> <p>xor \u90fd\u662f\u5947\u51fd\u6570. \u5982 \\(F=(X\\oplus Y)\\oplus Z \\\\ F=(W\\oplus X)\\oplus (Y\\oplus Z)\\) </p> <ul> <li> <p>Parity Generators and Checkers \u5947\u5076\u6821\u9a8c\uff1a\u4f20\u8f93\u82e5\u5e72\u4e2a\u6570\u636e\u4f4d\uff0c\u589e\u52a0\u4e00\u4e2a\u6570\u636e\u4f4d\uff0c\u7528\u6765\u8868\u793a\u6570\u636e\u4f4d\u7684\u5947\u5076\u6027\u3002\u8f93\u5165\u548c\u8f93\u51fa\u7aef\u7684\u5947\u5076\u4f4d\u5e94\u8be5\u76f8\u540c\u3002  </p> <p>Example</p> <p> </p> </li> </ul>"},{"location":"notes/cs/logic/02/#hi-impedance-outputs","title":"Hi-Impedance Outputs","text":"<p>\u9ad8\u963b\u8f93\u51fa  </p> <p>Three-state logic adds a third logic value, Hi-Impedance (Hi-Z), giving three states: 0, 1, and Hi-Z on the outputs.  \u6709\u6761\u4ef6\u60c5\u51b5\u4e0b\u5141\u8bb8\u95e8\u7684\u8f93\u51fa\u63a5\u5728\u4e00\u8d77\u3002  </p> <ul> <li>3-State Buffer</li> </ul> <ul> <li>Resolving 3-State Values on a  Connection \u628a\u4e24\u4e2a\u4e09\u6001\u95e8\u7684\u8f93\u51fa\u63a5\u5728\u4e00\u8d77\uff1a Resolution Table </li> </ul> B1 B0 OUT 0 Hi-Z 0 1 Hi-Z 1 Hi-Z 0 0 Hi-Z 1 1 Hi-Z Hi-Z Hi-Z <p>Info</p> <p>\u4e0d\u5141\u8bb8\u540c\u65f6\u4e24\u4e2a\u95e8\u540c\u65f6\u8f93\u51fa\u6709\u6548\u8f93\u51fa\uff01\u5426\u5219\u53ef\u80fd\u4ea7\u751f\u5927\u7535\u6d41\u635f\u574f\u7535\u8def\u3002 \u56e0\u6b64\u5bf9\u4e8e n \u4e2a\u4e09\u6001\u95e8\uff0c\u5171 2n+1 \u79cd\u6709\u6548\u7ec4\u5408\u3002</p> <ul> <li>3-State Logic Circuit   </li> </ul> \u6b64\u65f6\uff0c\u4e24\u4e2a\u4e09\u6001\u95e8\u4e0d\u4f1a\u540c\u65f6\u8f93\u51fa\u6709\u6548\u8f93\u51fa\u3002"},{"location":"notes/cs/logic/02/#more-complex-gates","title":"More Complex Gates","text":"<p>The remaining complex gates are SOP or POS structures with and without an output inverter.  </p> <ul> <li>A - AND</li> <li>O - OR</li> <li>I  - Inverter Numbers of inputs on first-level \u201cgates\u201d or directly to second-level \u201cgates\u201d  </li> </ul> <p>e.g. AOI(AND-OR-Invert), 2-2-1 AO means 2-input ANDS driving an OR with one additional OR input.  </p>"},{"location":"notes/cs/pl/","title":"\u7f16\u7a0b\u8bed\u8a00\u8bb0\u5f55","text":"<p>\u6d59\u5927\u8bfe\u7a0b\u53ca\u81ea\u5b66\u7b14\u8bb0</p> <p>C\u8bed\u8a00\u5f88\u591a\u7ec6\u8282\u5df2\u7ecf\u5fd8\u5149\u4e86\uff0c\u56e0\u6b64\u60f3\u8bb0\u5f55\u4e0b\u6765\uff0c\u8d81\u7740\u5bd2\u5047\u5b66\u4e86\u4e00\u70b9Python\uff0c\u672a\u6765\u9884\u8ba1\u4f1a\u5b66C++\u8fd8\u6709Rust\u7b49\u8bed\u8a00</p> <p>Warning</p> <p>\u5c1a\u672a\u5b8c\u5de5\uff0c\u4e5f\u4e0d\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u80fd\u5b8c\u5de5</p>"},{"location":"notes/cs/pl/cs61a/","title":"CS61A Fall 2023","text":""},{"location":"notes/cs/pl/cs61a/#week1","title":"week1","text":"<p>\u57fa\u672c\u8bed\u6cd5\u4e0e\u51fd\u6570</p> <ul> <li> <p>\u8d4b\u503c\u8bed\u53e5\u90fd\u662f\u5148\u7b97\u53f3\u503c\u518d\u4f9d\u5e8f\u4e0e\u5de6\u4fa7\u540d\u79f0\u7ed1\u5b9a Python<pre><code>&gt;&gt;&gt; x,y=3,4.5\n    x,y=y,x\n</code></pre></p> </li> <li> <p><code>print</code>\u8fd4\u56de\u503c\u59cb\u7ec8\u4e3a<code>None</code> Python<pre><code>&gt;&gt;&gt; print (print(1),print(2))\n1\n2\nNone None\n</code></pre></p> </li> <li> <p>\u51fd\u6570\u53ca\u5f62\u53c2\u540d\u79f0\u9009\u53d6\uff1a</p> <ol> <li>\u5355\u8bcd\u4e4b\u95f4\u7528\u4e0b\u5212\u7ebf</li> <li>\u51fd\u6570\u540d\u53cd\u6620\u5bf9\u53c2\u6570\u7684\u64cd\u4f5c\u6216\u7ed3\u679c</li> <li>\u53c2\u6570\u540d\u53cd\u6620\u5176\u4f5c\u7528</li> </ol> </li> <li> <p>\u51fd\u6570\u662f\u4e00\u79cd\u62bd\u8c61:domain(\u63a5\u53d7\u7684\u53c2\u6570\u5408\u96c6) \u2192 range(\u8fd4\u56de\u7684\u53c2\u6570\u5408\u96c6) intent(\u8ba1\u7b97\u8f93\u5165\u548c\u8f93\u51fa\u7684\u5173\u7cfb\u4ee5\u53ca\u53ef\u80fd\u4ea7\u751f\u7684\u526f\u4f5c\u7528)</p> </li> <li> <p><code>/</code>\u5c31\u6b63\u5e38\u9664\u6cd5\uff0c\u5f97\u5230\u6d6e\u70b9\u6570; <code>//</code>\u5411\u4e0b\u53d6\u6574(\u7c7b\u4f3cC\u4e2dint\u578b\u7684<code>/</code>)</p> </li> </ul>"},{"location":"notes/cs/pl/cs61a/#week2","title":"week2","text":"<p>\u6761\u4ef6\u63a7\u5236 \u9ad8\u9636\u51fd\u6570 \u73af\u5883 + \u597d\u7684\u51fd\u6570\u662f\u62bd\u8c61\u7684\uff1a\u901a\u7528\u3001\u7b80\u5355\u3001\u4e0d\u91cd\u590d + Python\u662f\u4ee5\u7f29\u8fdb\u5212\u5206\u8bed\u5757\u7684 + Boolean Operators:<code>and</code> <code>or</code> <code>not</code> &amp; short-circuiting: Python<pre><code>&gt;&gt;&gt; -1 and 2 and 0 and 1\n0\n&gt;&gt;&gt; False or 3124 or 1/0\n3124 \n</code></pre> \u6362\u8a00\u4e4b\uff0c\u4ece\u5de6\u5411\u53f3\uff0c\u67d0\u4f4d\u7f6e\u7684\u8868\u8fbe\u5f0f\u5df2\u7ecf\u53ef\u4ee5\u4fdd\u8bc1\u6574\u4e2a\u8bed\u53e5\u7684\u771f\u5047\u53ef\u5224\u65ad\u65f6\uff0c\u8ba1\u7b97\u7ed3\u679c\u4e3a\u6b64\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\uff0c\u5426\u5219\u4e3a\u6700\u53f3\u4fa7\u503c + \u6267\u884c\u6bd4\u8f83\u5e76\u8fd4\u56de\u5e03\u5c14\u503c\u7684\u51fd\u6570\u901a\u5e38<code>is</code>\u5f00\u5934\u4e14\u65e0\u4e0b\u5212\u7ebf\uff0c\u5982<code>isinstance</code> <code>isfinite</code> + Nested function definition: Python\u4e2d\u51fd\u6570\u53ef\u4ee5\u5d4c\u5957\u5b9a\u4e49 + Curring(\u67ef\u91cc\u5316):\u4f7f\u7528\u9ad8\u9636\u51fd\u6570\u5c06\u591a\u5143\u51fd\u6570\u8f6c\u5316\u4e3a\u53ea\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u94fe Python<pre><code>&gt;&gt;&gt; def curried_pow(x):\n            def h(y):\n                return pow(x,y)\n            return h\n</code></pre> + Lambda expression \u662f\u51fd\u6570\u7684\u7b80\u5316\uff0c\u4f46\u53ef\u8bfb\u6027\u5dee</p> <p>Note</p> <p>lambda    x : f(g(x))</p> <p>A function takes x and returns f(g(x))</p> others ifelse\u5229\u7528\u77ed\u8def <p>\u4f8b\u5982\uff1a</p> <p><code>abs_number = lambda x : x if x &gt;= 0 else -x</code></p> <p>\u662f\u53d6x\u7edd\u5bf9\u503c\uff08\u6709\u70b9\u50cfC\u91cc\u7684<code>?</code>\uff09</p> <p>\u6e90\u81ea\u4e8ehw02\u7684mod_maker,\u5229\u7528<code>or</code>\u548c <code>and</code>\u7684\u77ed\u8def\u95ee\u9898\u907f\u514d\u7528<code>ifelse</code>\u800c\u63a7\u5236\u6761\u4ef6\u8f93\u51fa Python<pre><code>&gt;&gt;&gt; def mod_maker():\n        return lambda x,y : x%y or True\n    mod = mod_maker()\n    '''\n    &gt;&gt;&gt;mod(4,8)\n    4\n    &gt;&gt;&gt;mod(8,4)\n    True\n    '''\n</code></pre></p> <ul> <li>\u51fd\u6570\u88c5\u9970\u5668\uff08decorator\uff09</li> </ul> example Python<pre><code>&gt;&gt;&gt; def trace(fn):\n        def wrapped(x):\n            print('-&gt; ', fn, '(', x, ')')\n            return fn(x)\n        return wrapped\n\n&gt;&gt;&gt; @trace\n    def triple(x):\n        return 3 * x\n\n&gt;&gt;&gt; triple(12)\n-&gt;  &lt;function triple at 0x102a39848&gt; ( 12 )\n36\n</code></pre>"},{"location":"notes/cs/pl/cs61a/#week3","title":"week3","text":"<p>\u51fd\u6570\u5e94\u7528 + \u5229\u7528\u6784\u5efa\u51fd\u6570\u6700\u7ec8\u5b8c\u6210\u4e00\u6bb5\u97f3\u9891\u7684\u5236\u4f5c</p> Eg Python<pre><code>    # Example: Sound\n\nfrom wave import open\n#struct--encoding integers in the format that WAV files require\nfrom struct import Struct\nfrom math import floor\n\nframe_rate = 11025\n\ndef encode(x):\n    \"\"\"Encode float x between -1 and 1 as two bytes.\n    (See https://docs.python.org/3/library/struct.html)\n    \"\"\"\n    i = int(16384 * x)\n    return Struct('h').pack(i)\n\ndef play(sampler, name='song.wav', seconds=2):\n    \"\"\"Write the output of a sampler function as a wav file.\n    (See https://docs.python.org/3/library/wave.html)\n    \"\"\"\n    out = open(name, 'wb')\n    out.setnchannels(1)\n    out.setsampwidth(2)\n    out.setframerate(frame_rate)\n    t = 0\n    while t &lt; seconds * frame_rate:\n        sample = sampler(t)\n        out.writeframes(encode(sample))\n        t = t + 1\n    out.close()\n\ndef tri(frequency, amplitude=0.3):\n    \"\"\"A continuous triangle wave.\"\"\"\n    period = frame_rate // frequency\n    def sampler(t):\n        saw_wave = t / period - floor(t / period + 0.5)\n        tri_wave = 2 * abs(2 * saw_wave) - 1\n        return amplitude * tri_wave\n    return sampler\n\nc_freq, e_freq, g_freq = 261.63, 329.63, 392.00\n\nplay(tri(e_freq))\n\ndef note(f, start, end, fade=.01):\n    \"\"\"Play f for a fixed duration.\"\"\"\n    def sampler(t):\n        seconds = t / frame_rate\n        if seconds &lt; start:\n            return 0\n        elif seconds &gt; end:\n            return 0\n        elif seconds &lt; start + fade:\n            return (seconds - start) / fade * f(t)\n        elif seconds &gt; end - fade:\n            return (end - seconds) / fade * f(t)\n        else:\n            return f(t)\n    return sampler\n\nplay(note(tri(e_freq), 1, 1.5))\n\ndef both(f, g):\n    return lambda t: f(t) + g(t)\n\nc = tri(c_freq)\ne = tri(e_freq)\ng = tri(g_freq)\nlow_g = tri(g_freq / 2)\n\nplay(both(note(e, 0, 1/8), note(low_g, 1/8, 3/8)))\n\nplay(both(note(c, 0, 1), both(note(e, 0, 1), note(g, 0, 1))))\n\ndef mario(c, e, g, low_g):\n    z = 0\n    song = note(e, z, z + 1/8)\n    z += 1/8\n    song = both(song, note(e, z, z + 1/8))\n    z += 1/4\n    song = both(song, note(e, z, z + 1/8))\n    z += 1/4\n    song = both(song, note(c, z, z + 1/8))\n    z += 1/8\n    song = both(song, note(e, z, z + 1/8))\n    z += 1/4\n    song = both(song, note(g, z, z + 1/4))\n    z += 1/2\n    song = both(song, note(low_g, z, z + 1/4))\n    return song\n\ndef mario_at(octave):\n    c = tri(octave * c_freq)\n    e = tri(octave * e_freq)\n    g = tri(octave * g_freq)\n    low_g = tri(octave * g_freq / 2)\n    return mario(c, e, g, low_g)\nplay(mario_at(1/2))\n</code></pre>"},{"location":"notes/math/discrete_math/","title":"\u79bb\u6563\u6570\u5b66\u53ca\u5176\u5e94\u7528","text":"<p>\u6ce8</p> <p>\u672c\u610f\u662f\u4f5c\u4e3a\u8bfe\u5802\u7b14\u8bb0\uff0c\u4f46\u662f\u8bfe\u4e0a\u4e5f\u53ea\u662f\u5728\u5ff5PPT\uff0c \u9042\u6539\u4e3a\u81ea\u5b66\u540e\u7684\u590d\u4e60\u603b\u7ed3 \u6559\u6750\uff1a\u79bb\u6563\u6570\u5b66\u53ca\u5176\u5e94\u7528\uff08\u7b2c\u516b\u7248\uff09</p>"},{"location":"notes/math/discrete_math/01/","title":"Chapter 1 \u57fa\u7840\uff1a\u903b\u8f91\u4e0e\u8bc1\u660e","text":"\u5f02\u6216 <p>p\u548cq\u7684\u5f02\u6216\uff08\u8bb0\u4f5cp\u2295q\uff09\uff1a\u5f53p\u4e0eq\u4e2d\u6070\u6709\u4e00\u4e2a\u4e3a\u771f\u65f6\u547d\u9898\u4e3a\u771f\uff0c\u5426\u5219\u4e3a\u5047(\u4ea6\u5373\u53ea\u80fd\u4e8c\u9009\u4e00)</p> <p>Example</p> <p>\u201c\u6211\u8981\u7528\u5168\u90e8\u79ef\u84c4\u6c2a\u91d1\u62bd\u6ee1\u547d\u80e1\u6843\u6216\u8005\u53bb\u65e5\u672c\u5723\u5730\u5de1\u793c\u201d (\u663e\u7136\u53ea\u80fd\u5b8c\u6210\u4e00\u4e2a) </p> <ul> <li> <p>\u6761\u4ef6\u8bed\u53e5 p-&gt;q \u7684\u771f\u503c\u5224\u65ad\uff1a\u53ea\u6709\u5047\u8bbep\u4e3a\u771f\u4e14\u7ed3\u8bbaq\u4e3a\u5047\u65f6\uff0cp-&gt;q\u4e3a\u5047</p> </li> <li> <p>\u53cc\u6761\u4ef6\u8bed\u53e5p&lt;-&gt;q\u771f\u503c\u5224\u65ad\uff1ap\u4e0eq\u771f\u503c\u76f8\u53cd\u65f6\u4e3a\u5047\uff0c\u5426\u5219\u4e3a\u771f</p> </li> <li></li> <li> <p>\u4f4d\u8fd0\u7b97 OR AND XOR NOR NAND  \u901a\u8fc7\u4f4d\u8fd0\u7b97\u8fdb\u884c\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u8fd0\u7b97</p> </li> </ul> <p>\u771f\u503c\u8868\uff1a</p> x y x\u2228y x\u2227y x\u2295y 0 0 0 0 0 0 1 1 0 1 1 1 1 1 0 \u6a21\u7cca\u903b\u8f91 <p>\u771f\u503c\u4e3a0\u7684\u547d\u9898\u4e3a\u5047\uff0c\u771f\u503c\u4e3a1\u7684\u547d\u9898\u4e3a\u771f\u3002\u547d\u9898\u7684\u771f\u503c\u4ecb\u4e8e0\u4e0e1\u4e4b\u95f4\u8868\u660e\u771f\u503c\u7684\u4e0d\u540c\u7a0b\u5ea6</p> <ul> <li>\u95e8\u7535\u8def\uff08gate\uff09:\u61d2\uff0c\u9042\u53bbwiki\u770b\u5427</li> </ul>"},{"location":"notes/math/math_analysis/","title":"Index","text":"<p>\u6ce8</p> <p>\u4f5c\u4e3a\u516c\u5f0f\u5b9a\u7406\u7684\u5907\u5fd8\u5f55\u4ee5\u53caLaTeX\u7684\u7ec3\u4e60</p> <p>\u6559\u6750\uff1a\u300a\u6570\u5b66\u5206\u6790\u300b\u9648\u7eaa\u4fee</p> <p>\u6559\u5e08\uff1a\u9648\u9526\u8f89</p>"},{"location":"notes/math/math_analysis/famulas/","title":"\u516c\u5f0f\u548c\u5b9a\u7406\u8bb0\u5f55","text":""},{"location":"notes/math/math_analysis/famulas/#_2","title":"\u5e38\u89c1\u7b49\u4ef7\u65e0\u7a77\u5c0f","text":"<ul> <li>\u5f53\\(x\\to0\\):<ol> <li>\\(\\sin x\\sim\\tan x\\sim\\arcsin x\\sim\\arctan x\\sim x\\)</li> <li>\\(\\ln(1+x)\\sim x\\) \\(\\ e^x - 1 \\sim x\\)</li> <li>\\(1-\\cos x \\sim \\dfrac{1}{2} x^2\\) </li> <li>\\((1 + \\beta x)^\\alpha - 1 \\sim \\alpha  \\cdot \\beta x\\)</li> <li>\\(a^x - 1 = e^{x\\ln_{}{a}} - 1 \\sim x\\ln_{}{a}\\),</li> <li>$ \\log_{a}{(1+x)} = \\dfrac{\\ln_{}{1+x}}{\\ln_{}{a}} \\sim \\dfrac{x}{\\ln_{}{a}}$</li> </ol> </li> </ul>"},{"location":"notes/math/math_analysis/famulas/#_3","title":"\u5bfc\u6570\u516c\u5f0f","text":"<ul> <li>\\({(a^{x})}' = a^{x}\\ln_{}{a}\\)</li> <li>$ {(log_{a}{x})}' = \\dfrac{1}{xln_{}{a}}$</li> <li>$ {(\\tan{x})}' = \\sec^{2}{x}$</li> <li>$ {(\\cot{x})}' = -\\csc^{2}{x}$</li> <li>$ {(\\sec{x})}' = \\sec{x}\\tan{x}$</li> <li>$ {(\\csc{x})}' = -\\csc{x}\\cot{x}$</li> <li>\\({(\\arcsin{x})}' = \\dfrac{1}{\\sqrt{1 - x^{2}}}\\)</li> <li>$ {(\\arccos{x})}' = \\dfrac{1}{1 + x^{2}}$</li> </ul>"},{"location":"notes/math/math_analysis/famulas/#_4","title":"\u91cd\u8981\u6781\u9650","text":""},{"location":"notes/math/math_analysis/famulas/#_5","title":"\u4e2d\u503c\u5b9a\u7406","text":""},{"location":"notes/math/math_analysis/famulas/#peano","title":"\u6cf0\u52d2\u5c55\u5f00\uff08Peano \u4f59\u9879\uff09","text":""},{"location":"notes/math/math_analysis/famulas/#_6","title":"\u4e0d\u5b9a\u79ef\u5206","text":""},{"location":"notes/math/math_analysis/famulas/#_7","title":"\u516c\u5f0f\u548c\u5b9a\u7406\u8bb0\u5f55","text":""},{"location":"notes/others/history/","title":"\u8003\u53e4\u53d1\u73b0\u4e0e\u4e2d\u534e\u6587\u5316","text":""},{"location":"notes/others/history/#_2","title":"\u8003\u53e4\u5730\u5c42\u5b66","text":"<p>\u901a\u8fc7\u5224\u5b9a\u9057\u5740\u4e2d\u8bf8\u5806\u79ef\u5f62\u6210\u7684\u5148\u540e\u8fc7\u7a0b\u6216\u6b21\u5e8f\u6765\u7814\u7a76\u76f8\u5bf9\u7814\u7a76\u65e9\u665a\u7684\u65b9\u6cd5</p> <ul> <li>\u4f9d\u636e\uff1a\u571f\u8d28\u3001\u571f\u8272\u3001\u5305\u542b\u7269</li> <li>\u53e4\u4eba\u5b9c\u5c45\u73af\u5883\uff1a\u6cb3\u6d41\u65c1\u7684\u4e8c\u7ea7\u53f0\u5824</li> <li>\u4eba\u7c7b\u7684\u6d3b\u52a8\u5fc5\u7136\u4f1a\u6539\u9020\u5f53\u5730\u571f\u58e4</li> <li>\u5730\u5c42\u4e0d\u53ef\u80fd\u7cbe\u786e\u5212\u5206\u671d\u4ee3</li> <li>\u6b21\u751f\u5806\u79ef\u5bfc\u81f4\u6df1\u5ea6\u4e0e\u5e74\u4ee3\u65e9\u665a\u53cd\u8f6c</li> </ul> <p>\u7070\u5751</p> <p>\u6700\u4e3a\u5e38\u89c1\uff0c\u4e00\u822c\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u7528\u9014\u7684\u5c31\u79f0\u4e4b\u4e3a\u201c\u7070\u5751\u201d</p>"}]}